import{T as q}from"./vega-dataflow-7e3fa937.js";import{u as R}from"./vega-util-7f144c9d.js";import{f as F,g as S,p as C}from"./d3-array-ee3dc224.js";const U=e=>new Uint8Array(e),E=e=>new Uint16Array(e),b=e=>new Uint32Array(e);function L(){let e=8,t=[],r=b(0),o=k(0,e),d=k(0,e);return{data:()=>t,seen:()=>r=P(r,t.length),add(s){for(let a=0,f=t.length,l=s.length,n;a<l;++a)n=s[a],n._index=f++,t.push(n)},remove(s,a){const f=t.length,l=Array(f-s),n=t;let c,i,h;for(i=0;!a[i]&&i<f;++i)l[i]=t[i],n[i]=i;for(h=i;i<f;++i)c=t[i],a[i]?n[i]=-1:(n[i]=h,o[h]=o[i],d[h]=d[i],l[h]=c,c._index=h++),o[i]=0;return t=l,n},size:()=>t.length,curr:()=>o,prev:()=>d,reset:s=>d[s]=o[s],all:()=>e<257?255:e<65537?65535:4294967295,set(s,a){o[s]|=a},clear(s,a){o[s]&=~a},resize(s,a){const f=o.length;(s>f||a>e)&&(e=Math.max(a,e),o=k(s,e,o),d=k(s,e))}}}function P(e,t,r){return e.length>=t?e:(r=r||new e.constructor(t),r.set(e),r)}function k(e,t,r){const o=(t<257?U:t<65537?E:b)(e);return r&&o.set(r),o}function w(e,t,r){const o=1<<t;return{one:o,zero:~o,range:r.slice(),bisect:e.bisect,index:e.index,size:e.size,onAdd(d,s){const a=this,f=a.bisect(a.range,d.value),l=d.index,n=f[0],c=f[1],i=l.length;let h;for(h=0;h<n;++h)s[l[h]]|=o;for(h=c;h<i;++h)s[l[h]]|=o;return a}}}function O(){let e=b(0),t=[],r=0;function o(f,l,n){if(!l.length)return[];const c=r,i=l.length,h=b(i);let m=Array(i),g,p,u;for(u=0;u<i;++u)m[u]=f(l[u]),h[u]=u;if(m=T(m,h),c)g=t,p=e,t=Array(c+i),e=b(c+i),B(n,g,p,c,m,h,i,t,e);else{if(n>0)for(u=0;u<i;++u)h[u]+=n;t=m,e=h}return r=c+i,{index:h,value:m}}function d(f,l){const n=r;let c,i,h;for(i=0;!l[e[i]]&&i<n;++i);for(h=i;i<n;++i)l[c=e[i]]||(e[h]=c,t[h]=t[i],++h);r=n-f}function s(f){for(let l=0,n=r;l<n;++l)e[l]=f[e[l]]}function a(f,l){let n;return l?n=l.length:(l=t,n=r),[F(l,f[0],0,n),S(l,f[1],0,n)]}return{insert:o,remove:d,bisect:a,reindex:s,index:()=>e,size:()=>r}}function T(e,t){return e.sort.call(t,(r,o)=>{const d=e[r],s=e[o];return d<s?-1:d>s?1:0}),C(e,t)}function B(e,t,r,o,d,s,a,f,l){let n=0,c=0,i;for(i=0;n<o&&c<a;++i)t[n]<d[c]?(f[i]=t[n],l[i]=r[n++]):(f[i]=d[c],l[i]=s[c++]+e);for(;n<o;++n,++i)f[i]=t[n],l[i]=r[n];for(;c<a;++c,++i)f[i]=d[c],l[i]=s[c]+e}function j(e){q.call(this,L(),e),this._indices=null,this._dims=null}j.Definition={type:"CrossFilter",metadata:{},params:[{name:"fields",type:"field",array:!0,required:!0},{name:"query",type:"array",array:!0,required:!0,content:{type:"number",array:!0,length:2}}]};R(j,q,{transform(e,t){if(this._dims){var r=e.modified("fields")||e.fields.some(o=>t.modified(o.fields));return r?this.reinit(e,t):this.eval(e,t)}else return this.init(e,t)},init(e,t){const r=e.fields,o=e.query,d=this._indices={},s=this._dims=[],a=o.length;let f=0,l,n;for(;f<a;++f)l=r[f].fname,n=d[l]||(d[l]=O()),s.push(w(n,f,o[f]));return this.eval(e,t)},reinit(e,t){const r=t.materialize().fork(),o=e.fields,d=e.query,s=this._indices,a=this._dims,f=this.value,l=f.curr(),n=f.prev(),c=f.all(),i=r.rem=r.add,h=r.mod,m=d.length,g={};let p,u,y,x,_,z,v,A,M;if(n.set(l),t.rem.length&&(_=this.remove(e,t,r)),t.add.length&&f.add(t.add),t.mod.length)for(z={},x=t.mod,v=0,A=x.length;v<A;++v)z[x[v]._index]=1;for(v=0;v<m;++v)M=o[v],(!a[v]||e.modified("fields",v)||t.modified(M.fields))&&(y=M.fname,(p=g[y])||(s[y]=u=O(),g[y]=p=u.insert(M,t.source,0)),a[v]=w(u,v,d[v]).onAdd(p,l));for(v=0,A=f.data().length;v<A;++v)_[v]||(n[v]!==l[v]?i.push(v):z[v]&&l[v]!==c&&h.push(v));return f.mask=(1<<m)-1,r},eval(e,t){const r=t.materialize().fork(),o=this._dims.length;let d=0;return t.rem.length&&(this.remove(e,t,r),d|=(1<<o)-1),e.modified("query")&&!e.modified("fields")&&(d|=this.update(e,t,r)),t.add.length&&(this.insert(e,t,r),d|=(1<<o)-1),t.mod.length&&(this.modify(t,r),d|=(1<<o)-1),this.value.mask=d,r},insert(e,t,r){const o=t.add,d=this.value,s=this._dims,a=this._indices,f=e.fields,l={},n=r.add,c=d.size()+o.length,i=s.length;let h=d.size(),m,g,p;d.resize(c,i),d.add(o);const u=d.curr(),y=d.prev(),x=d.all();for(m=0;m<i;++m)g=f[m].fname,p=l[g]||(l[g]=a[g].insert(f[m],o,h)),s[m].onAdd(p,u);for(;h<c;++h)y[h]=x,u[h]!==x&&n.push(h)},modify(e,t){const r=t.mod,o=this.value,d=o.curr(),s=o.all(),a=e.mod;let f,l,n;for(f=0,l=a.length;f<l;++f)n=a[f]._index,d[n]!==s&&r.push(n)},remove(e,t,r){const o=this._indices,d=this.value,s=d.curr(),a=d.prev(),f=d.all(),l={},n=r.rem,c=t.rem;let i,h,m,g;for(i=0,h=c.length;i<h;++i)m=c[i]._index,l[m]=1,a[m]=g=s[m],s[m]=f,g!==f&&n.push(m);for(m in o)o[m].remove(h,l);return this.reindex(t,h,l),l},reindex(e,t,r){const o=this._indices,d=this.value;e.runAfter(()=>{const s=d.remove(t,r);for(const a in o)o[a].reindex(s)})},update(e,t,r){const o=this._dims,d=e.query,s=t.stamp,a=o.length;let f=0,l,n;for(r.filters=0,n=0;n<a;++n)e.modified("query",n)&&(l=n,++f);if(f===1)f=o[l].one,this.incrementOne(o[l],d[l],r.add,r.rem);else for(n=0,f=0;n<a;++n)e.modified("query",n)&&(f|=o[n].one,this.incrementAll(o[n],d[n],s,r.add),r.rem=r.add);return f},incrementAll(e,t,r,o){const d=this.value,s=d.seen(),a=d.curr(),f=d.prev(),l=e.index(),n=e.bisect(e.range),c=e.bisect(t),i=c[0],h=c[1],m=n[0],g=n[1],p=e.one;let u,y,x;if(i<m)for(u=i,y=Math.min(m,h);u<y;++u)x=l[u],s[x]!==r&&(f[x]=a[x],s[x]=r,o.push(x)),a[x]^=p;else if(i>m)for(u=m,y=Math.min(i,g);u<y;++u)x=l[u],s[x]!==r&&(f[x]=a[x],s[x]=r,o.push(x)),a[x]^=p;if(h>g)for(u=Math.max(i,g),y=h;u<y;++u)x=l[u],s[x]!==r&&(f[x]=a[x],s[x]=r,o.push(x)),a[x]^=p;else if(h<g)for(u=Math.max(m,h),y=g;u<y;++u)x=l[u],s[x]!==r&&(f[x]=a[x],s[x]=r,o.push(x)),a[x]^=p;e.range=t.slice()},incrementOne(e,t,r,o){const d=this.value,s=d.curr(),a=e.index(),f=e.bisect(e.range),l=e.bisect(t),n=l[0],c=l[1],i=f[0],h=f[1],m=e.one;let g,p,u;if(n<i)for(g=n,p=Math.min(i,c);g<p;++g)u=a[g],s[u]^=m,r.push(u);else if(n>i)for(g=i,p=Math.min(n,h);g<p;++g)u=a[g],s[u]^=m,o.push(u);if(c>h)for(g=Math.max(n,h),p=c;g<p;++g)u=a[g],s[u]^=m,r.push(u);else if(c<h)for(g=Math.max(i,c),p=h;g<p;++g)u=a[g],s[u]^=m,o.push(u);e.range=t.slice()}});function D(e){q.call(this,null,e)}D.Definition={type:"ResolveFilter",metadata:{},params:[{name:"ignore",type:"number",required:!0,description:"A bit mask indicating which filters to ignore."},{name:"filter",type:"object",required:!0,description:"Per-tuple filter bitmaps from a CrossFilter transform."}]};R(D,q,{transform(e,t){const r=~(e.ignore||0),o=e.filter,d=o.mask;if(!(d&r))return t.StopPropagation;const s=t.fork(t.ALL),a=o.data(),f=o.curr(),l=o.prev(),n=c=>f[c]&r?null:a[c];return s.filter(s.MOD,n),d&d-1?(s.filter(s.ADD,c=>{const i=f[c]&r;return!i&&i^l[c]&r?a[c]:null}),s.filter(s.REM,c=>{const i=f[c]&r;return i&&!(i^(i^l[c]&r))?a[c]:null})):(s.filter(s.ADD,n),s.filter(s.REM,c=>(f[c]&r)===d?a[c]:null)),s.filter(s.SOURCE,c=>n(c._index))}});const J=Object.freeze(Object.defineProperty({__proto__:null,crossfilter:j,resolvefilter:D},Symbol.toStringTag,{value:"Module"}));export{J as x};
