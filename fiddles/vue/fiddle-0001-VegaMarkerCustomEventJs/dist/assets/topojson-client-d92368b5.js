function b(a){return a}function x(a){if(a==null)return b;var i,o,c=a.scale[0],s=a.scale[1],f=a.translate[0],p=a.translate[1];return function(h,d){d||(i=o=0);var u=2,t=h.length,e=new Array(t);for(e[0]=(i+=h[0])*c+f,e[1]=(o+=h[1])*s+p;u<t;)e[u]=h[u],++u;return e}}function E(a,i){for(var o,c=a.length,s=c-i;s<--c;)o=a[s],a[s++]=a[c],a[c]=o}function A(a,i){return typeof i=="string"&&(i=a.objects[i]),i.type==="GeometryCollection"?{type:"FeatureCollection",features:i.geometries.map(function(o){return y(a,o)})}:y(a,i)}function y(a,i){var o=i.id,c=i.bbox,s=i.properties==null?{}:i.properties,f=v(a,i);return o==null&&c==null?{type:"Feature",properties:s,geometry:f}:c==null?{type:"Feature",id:o,properties:s,geometry:f}:{type:"Feature",id:o,bbox:c,properties:s,geometry:f}}function v(a,i){var o=x(a.transform),c=a.arcs;function s(t,e){e.length&&e.pop();for(var n=c[t<0?~t:t],r=0,l=n.length;r<l;++r)e.push(o(n[r],r));t<0&&E(e,l)}function f(t){return o(t)}function p(t){for(var e=[],n=0,r=t.length;n<r;++n)s(t[n],e);return e.length<2&&e.push(e[0]),e}function h(t){for(var e=p(t);e.length<4;)e.push(e[0]);return e}function d(t){return t.map(h)}function u(t){var e=t.type,n;switch(e){case"GeometryCollection":return{type:e,geometries:t.geometries.map(u)};case"Point":n=f(t.coordinates);break;case"MultiPoint":n=t.coordinates.map(f);break;case"LineString":n=p(t.arcs);break;case"MultiLineString":n=t.arcs.map(p);break;case"Polygon":n=d(t.arcs);break;case"MultiPolygon":n=t.arcs.map(d);break;default:return null}return{type:e,coordinates:n}}return u(i)}function k(a,i){var o={},c={},s={},f=[],p=-1;i.forEach(function(u,t){var e=a.arcs[u<0?~u:u],n;e.length<3&&!e[1][0]&&!e[1][1]&&(n=i[++p],i[p]=u,i[t]=n)}),i.forEach(function(u){var t=h(u),e=t[0],n=t[1],r,l;if(r=s[e])if(delete s[r.end],r.push(u),r.end=n,l=c[n]){delete c[l.start];var g=l===r?r:r.concat(l);c[g.start=r.start]=s[g.end=l.end]=g}else c[r.start]=s[r.end]=r;else if(r=c[n])if(delete c[r.start],r.unshift(u),r.start=e,l=s[e]){delete s[l.end];var m=l===r?r:l.concat(r);c[m.start=l.start]=s[m.end=r.end]=m}else c[r.start]=s[r.end]=r;else r=[u],c[r.start=e]=s[r.end=n]=r});function h(u){var t=a.arcs[u<0?~u:u],e=t[0],n;return a.transform?(n=[0,0],t.forEach(function(r){n[0]+=r[0],n[1]+=r[1]})):n=t[t.length-1],u<0?[n,e]:[e,n]}function d(u,t){for(var e in u){var n=u[e];delete t[n.start],delete n.start,delete n.end,n.forEach(function(r){o[r<0?~r:r]=1}),f.push(n)}}return d(s,c),d(c,s),i.forEach(function(u){o[u<0?~u:u]||f.push([u])}),f}function M(a){return v(a,w.apply(this,arguments))}function w(a,i,o){var c,s,f;if(arguments.length>1)c=P(a,i,o);else for(s=0,c=new Array(f=a.arcs.length);s<f;++s)c[s]=s;return{type:"MultiLineString",arcs:k(a,c)}}function P(a,i,o){var c=[],s=[],f;function p(e){var n=e<0?~e:e;(s[n]||(s[n]=[])).push({i:e,g:f})}function h(e){e.forEach(p)}function d(e){e.forEach(h)}function u(e){e.forEach(d)}function t(e){switch(f=e,e.type){case"GeometryCollection":e.geometries.forEach(t);break;case"LineString":h(e.arcs);break;case"MultiLineString":case"Polygon":d(e.arcs);break;case"MultiPolygon":u(e.arcs);break}}return t(i),s.forEach(o==null?function(e){c.push(e[0].i)}:function(e){o(e[0].g,e[e.length-1].g)&&c.push(e[0].i)}),c}export{A as f,M as m};
