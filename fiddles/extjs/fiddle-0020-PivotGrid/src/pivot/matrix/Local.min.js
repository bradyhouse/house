Ext.define("Ext.pivot.matrix.Local",{alternateClassName:["Mz.aggregate.matrix.Local"],extend:"Ext.pivot.matrix.Base",alias:"pivotmatrix.local",requires:["Ext.pivot.matrix.Base","Ext.pivot.axis.Local","Ext.pivot.result.Local"],resultType:"local",leftAxisType:"local",topAxisType:"local",store:null,recordsPerJob:1000,timeBetweenJobs:2,onInitialize:function(){var a=this;a.localDelayedTask=new Ext.util.DelayedTask(a.delayedProcess,a);a.newRecordsDelayedTask=new Ext.util.DelayedTask(a.onOriginalStoreAddDelayed,a);a.updateRecordsDelayedTask=new Ext.util.DelayedTask(a.onOriginalStoreUpdateDelayed,a);a.callParent(arguments)},onReconfigure:function(c){var d=this,a,b;if(c.store){b=c.store}else{if(d.store){if(d.store.isStore&&!d.storeListeners){a=d.store}else{b=d.store}}}if(b){a=Ext.getStore(b||"");if(Ext.isEmpty(a)&&Ext.isString(b)){a=Ext.create(b)}}if(a&&a.isStore){Ext.destroy(d.storeListeners);if(d.store&&d.store.autoDestroy&&a!=d.store){Ext.destroy(d.store)}d.store=a;d.storeListeners=d.store.on({refresh:d.startProcess,beforeload:d.onOriginalStoreBeforeLoad,add:d.onOriginalStoreAdd,update:d.onOriginalStoreUpdate,remove:d.onOriginalStoreRemove,clear:d.startProcess,scope:d,destroyable:true})}d.callParent(arguments)},onDestroy:function(){var a=this;a.localDelayedTask.cancel();a.localDelayedTask=null;a.newRecordsDelayedTask.cancel();a.newRecordsDelayedTask=null;a.updateRecordsDelayedTask.cancel();a.updateRecordsDelayedTask=null;if(Ext.isArray(a.records)){a.records.length=0}a.records=null;Ext.destroy(a.storeListeners);if(a.store&&a.store.isStore&&a.store.autoDestroy){Ext.destroy(a.store)}a.store=a.storeListeners=null;a.callParent(arguments)},onOriginalStoreBeforeLoad:function(a){this.fireEvent("start",this)},onOriginalStoreAdd:function(b,a){var c=this;c.newRecords=c.newRecords||[];c.newRecords=Ext.Array.merge(c.newRecords,Ext.Array.from(a));c.newRecordsDelayedTask.delay(100)},onOriginalStoreAddDelayed:function(){var c=this,b,a;a=Ext.Array.from(c.newRecords||[]);for(b=0;b<a.length;b++){c.processRecord(a[b],b,a.length)}c.newRecords=[];c.leftAxis.tree=null;c.leftAxis.buildTree();c.topAxis.tree=null;c.topAxis.buildTree();c.recalculateResults(c.store,a)},onOriginalStoreUpdate:function(b,a){var c=this;c.updateRecords=c.updateRecords||[];c.updateRecords=Ext.Array.merge(c.updateRecords,Ext.Array.from(a));c.updateRecordsDelayedTask.delay(100)},onOriginalStoreUpdateDelayed:function(){var a=this;a.recalculateResults(a.store,a.updateRecords);a.updateRecords.length=0},onOriginalStoreRemove:function(c,a,d,b){if(b){return}this.startProcess()},isReallyDirty:function(b,a){var c=true;a=Ext.Array.from(a);this.leftAxis.dimensions.each(function(d){Ext.Array.forEach(a,function(e){c=(e&&e.isModel&&d.values.containsKey(e.get(d.dataIndex)));return c});return c});return !c},recalculateResults:function(b,a){var c=this;if(c.isReallyDirty(b,a)){c.startProcess();return}c.fireEvent("beforeupdate",c);c.results.calculate();Ext.Array.each(c.leftAxis.getTree(),c.updateRecordToPivotStore,c);c.updateGrandTotalsToPivotStore();c.fireEvent("afterupdate",c)},updateGrandTotalsToPivotStore:function(){var c=this,b=[],a;if(c.totals.length<=0){return}b.push({title:c.textGrandTotalTpl,values:c.preparePivotStoreRecordData({key:c.grandTotalKey})});if(Ext.isFunction(c.onBuildTotals)){c.onBuildTotals(b)}c.fireEvent("buildtotals",c,b);if(c.totals.length===b.length){for(a=0;a<c.totals.length;a++){if(Ext.isObject(b[a])&&Ext.isObject(b[a].values)&&(c.totals[a].record instanceof Ext.data.Model)){delete (b[a].values.id);c.totals[a].record.set(b[a].values)}}}},updateRecordToPivotStore:function(a){if(!a.children){if(a.record){a.record.set(this.preparePivotStoreRecordData(a))}}else{Ext.Array.each(a.children,function(b){this.updateRecordToPivotStore(b)},this)}},startProcess:function(){var a=this;if(!a.store||(a.store&&!a.store.isStore)||a.isDestroyed){return}a.clearData();a.localDelayedTask.delay(50)},delayedProcess:function(){var a=this;a.fireEvent("start",a);a.records=a.store.getRange();if(a.records.length==0){a.endProcess();return}a.statusInProgress=false;a.processRecords(0)},processRecords:function(a){var c=this,b=a,d;if(c.isDestroyed){return}d=c.records.length;c.statusInProgress=true;while(b<d&&b<a+c.recordsPerJob&&c.statusInProgress){c.processRecord(c.records[b],b,d);b++}if(b>=d){c.statusInProgress=false;c.results.calculate();c.leftAxis.buildTree();c.topAxis.buildTree();if(c.filterApplied){c.results.calculate()}c.records=null;c.endProcess();return}if(c.statusInProgress&&d>0){Ext.defer(c.processRecords,c.timeBetweenJobs,c,[b])}},processRecord:function(e,f,a){var g=this,h=g.grandTotalKey,k,b,d,c;k=g.leftAxis.processRecord(e);b=g.topAxis.processRecord(e);if(k&&b){g.results.add(h,h).addRecord(e);for(d=0;d<b.length;d++){g.topAxis.addItem(b[d]);g.results.add(h,b[d].key).addRecord(e)}for(d=0;d<k.length;d++){g.leftAxis.addItem(k[d]);g.results.add(k[d].key,h).addRecord(e);for(c=0;c<b.length;c++){g.results.add(k[d].key,b[c].key).addRecord(e)}}}g.fireEvent("progress",g,f+1,a)},getRecordsByRowGroup:function(d){var c=this.results.getByLeftKey(d),e=c.length,a=[],b;for(b=0;b<e;b++){a=Ext.Array.merge(a,c[b].records||[])}return a},getRecordsByColGroup:function(d){var c=this.results.getByTopKey(d),e=c.length,a=[],b;for(b=0;b<e;b++){a=Ext.Array.merge(a,c[b].records||[])}return a},getRecordsByGroups:function(c,b){var a=this.results.get(c,b);return(a?a.records||[]:[])}});