Ext.define("Ext.pivot.plugin.configurator.DragZone",{extend:"Ext.dd.DragZone",configColumnSelector:"."+Ext.baseCSSPrefix+"pivot-grid-config-column",configColumnInnerSelector:"."+Ext.baseCSSPrefix+"pivot-grid-config-column-inner",maxProxyWidth:120,dragging:false,constructor:function(a){this.panel=a;this.ddGroup=this.getDDGroup();this.callParent([a.el])},getDDGroup:function(){return"configurator-"+this.panel.up("gridpanel").id},getDragData:function(b){if(b.getTarget(this.configColumnInnerSelector)){var d=b.getTarget(this.configColumnSelector),a,c;if(d){a=Ext.getCmp(d.id);if(!this.panel.dragging){c=document.createElement("div");c.innerHTML=a.header;return{ddel:c,header:a}}}}return false},onBeforeDrag:function(){return !(this.panel.dragging||this.disabled)},onInitDrag:function(){this.panel.dragging=true;this.callParent(arguments)},onDragDrop:function(){if(!this.dragData.dropLocation){this.panel.dragging=false;this.callParent(arguments);return}var b=this.dragData.dropLocation.header,a=this.dragData.header,c=-1;if(b instanceof Ext.grid.column.Column){b.show();c=this.panel.items.findIndex("idColumn",a.id);this.panel.remove(this.panel.items.getAt(c));this.panel.notifyGroupChange()}this.panel.dragging=false;this.callParent(arguments)},afterRepair:function(){this.callParent();this.panel.dragging=false},getRepairXY:function(){return this.dragData.header.el.getXY()},disable:function(){this.disabled=true},enable:function(){this.disabled=false}});