Ext.define("Ext.pivot.axis.Base",{alternateClassName:["Mz.aggregate.axis.Abstract"],alias:"pivotaxis.base",mixins:["Ext.mixin.Factoryable"],requires:["Ext.pivot.MixedCollection","Ext.pivot.dimension.Item","Ext.pivot.axis.Item"],dimensions:null,matrix:null,items:null,tree:null,levels:0,isLeftAxis:false,constructor:function(a){var c=this,b,d;if(!a||!a.matrix){Ext.log("Wrong initialization of the axis!");return}c.isLeftAxis=a.isLeftAxis||c.isLeftAxis;c.matrix=a.matrix;c.tree=[];c.dimensions=Ext.create("Ext.pivot.MixedCollection");c.dimensions.getKey=function(e){return e.getId()};c.items=Ext.create("Ext.pivot.MixedCollection");c.items.getKey=function(e){return e.key};Ext.Array.each(Ext.Array.from(a.dimensions||[]),c.addDimension,c)},destroy:function(){var a=this;Ext.destroyMembers(a,"dimensions","items","tree");a.matrix=a.dimensions=a.items=a.tree=null},addDimension:function(a){if(a){this.dimensions.add(Ext.create("Ext.pivot.dimension.Item",Ext.apply({matrix:this.matrix},a)))}},addItem:function(b){var a=this;if(!Ext.isObject(b)||Ext.isEmpty(b.key)||Ext.isEmpty(b.value)||Ext.isEmpty(b.dimensionId)){return false}b.key=String(b.key);b.dimension=a.dimensions.getByKey(b.dimensionId);b.name=b.name||b.dimension.renderer(b.value);b.dimension.addValue(b.value,b.name);b.axis=a;if(!a.items.getByKey(b.key)&&b.dimension){a.items.add(Ext.create("Ext.pivot.axis.Item",b));return true}return false},clear:function(){this.items.clear();this.tree=null},getTree:function(){if(!this.tree){this.buildTree()}return this.tree},findTreeElement:function(c,d){var a=arguments[2]||this.tree||[],f=arguments[3]||1,e=null;var b=Ext.Array.filter(a,function(i,g,h){return Ext.isDate(d)?Ext.Date.isEqual(i[c],d):i[c]===d},this);if(b.length>0){return{level:f,node:b[0]}}Ext.Array.each(a,function(i,g,h){if(i.children){e=this.findTreeElement(c,d,i.children,f+1);if(e){return false}}},this);return e},buildTree:function(){var a=this;a.tree=[];a.items.each(a.addItemToTree,a);a.sortTree()},addItemToTree:function(e){var d=this,c=String(e.key).split(d.matrix.keysSeparator),a="",b;c=Ext.Array.slice(c,0,c.length-1);a=c.join(d.matrix.keysSeparator);b=d.findTreeElement("key",a);if(b){e.level=b.level;e.data=Ext.clone(b.node.data||{});b.node.children=b.node.children||[];b.node.children.push(e)}else{e.level=0;e.data={};d.tree.push(e)}e.data[e.dimension.getId()]=e.name;d.levels=Math.max(d.levels,e.level)},sortTree:function(){var a=arguments[0]||this.tree,b;if(a.length>0){b=a[0].dimension}if(b&&b.sortable===true){Ext.Array.sort(a,function(d,c){return b.sorterFn(d,c)})}Ext.Array.each(a,function(c){if(c.children){this.sortTree(c.children)}},this)},sortTreeByField:function(e,d){var b=this,a=false,c;if(e==b.matrix.compactViewKey){a=b.sortTreeByDimension(b.tree,b.dimensions.getRange(),d);b.dimensions.each(function(f){f.direction=d})}else{d=d||"ASC";c=b.dimensions.getByKey(e);if(c){a=b.sortTreeByDimension(b.tree,c,d);c.direction=d}else{a=b.sortTreeByRecords(b.tree,e,d)}}return a},sortTreeByDimension:function(j,c,g){var f=false,a=Ext.Array.from(c),b,e,d,h;j=j||[];e=j.length;if(e>0){b=j[0].dimension}if(Ext.Array.indexOf(a,b)>=0){if(b.sortable){h=b.direction;b.direction=g;Ext.Array.sort(j,Ext.bind(b.sorterFn,b));b.direction=h}f=b.sortable}for(d=0;d<e;d++){f=this.sortTreeByDimension(j[d].children,c,g)||f}return f},sortTreeByRecords:function(b,e,d){var c,a;b=b||[];a=b.length;if(a<=0){return false}if(b[0].record){this.sortTreeRecords(b,e,d)}else{this.sortTreeLeaves(b,e,d)}for(c=0;c<a;c++){this.sortTreeByRecords(b[c].children,e,d)}return true},sortTreeRecords:function(a,d,c){var b=this.matrix.naturalSort;c=c||"ASC";Ext.Array.sort(a||[],function(g,f){var e,i=g.record,h=f.record;if(!(i&&i.isModel&&h&&h.isModel)){return 0}e=b(i.get(d)||"",h.get(d)||"");if(e<0&&c==="DESC"){return 1}if(e>0&&c==="DESC"){return -1}return e})},sortTreeLeaves:function(i,d,e){var g=this.matrix.naturalSort,b=this.matrix.results,h=this.matrix.model,f=Ext.Array.indexOf(Ext.Array.pluck(h,"name"),d),a,c;if(f<0){return false}a=h[f]["col"];c=h[f]["agg"];e=e||"ASC";Ext.Array.sort(i||[],function(l,k){var j,n,m;n=b.get(l.key,a);if(n){n=n.getValue(c)}else{n=0}m=b.get(k.key,a);if(m){m=m.getValue(c)}else{m=0}j=g(n,m);if(j<0&&e==="DESC"){return 1}if(j>0&&e==="DESC"){return -1}return j})}});