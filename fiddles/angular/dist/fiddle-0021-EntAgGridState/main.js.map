{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-danger navbar-top\\\">\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n    </ul>\\n    <ul class=\\\"navbar-nav my-2 my-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" style=\\\"font-weight: 700; color: whitesmoke;\\\" alt=\\\"Fork me on GitHub\\\" target=\\\"_blank\\\"\\n           href=\\\"https://github.com/bradyhouse/house/tree/master/fiddles/angular2-cli/fiddle-0020-EntAgGridPivot\\\">\\n          Fork Me On Github\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav><!--./navbar-top -->\\n<div [ngStyle]=\\\"style\\\" (window:resize)=\\\"onResize($event)\\\">\\n  <div class=\\\"test-container\\\">\\n    <div class=\\\"test-header\\\">\\n      <div class=\\\"example-section\\\">\\n        Column Visible: <button (click)=\\\"showAthconste(true)\\\">Show Athconste</button>\\n        <button (click)=\\\"showAthconste(false)\\\">Hide Athconste</button>\\n        <button (click)=\\\"showMedals(true)\\\">Show All Medals</button>\\n        <button (click)=\\\"showMedals(false)\\\">Hide All Medals</button>\\n      </div>\\n      <div class=\\\"example-section\\\">\\n        Column Pinned: <button (click)=\\\"pinAthconste(true)\\\">Pin Athconste</button>\\n        <button (click)=\\\"pinAthconste(false)\\\">Unpin Athconste</button> <button (click)=\\\"pinAge(true)\\\">Pin Age</button>\\n        <button (click)=\\\"pinAge(false)\\\">Unpin Age</button>\\n      </div>\\n      <div class=\\\"example-section\\\">\\n        Column State: <button (click)=\\\"printState()\\\">Print State</button>\\n        <button (click)=\\\"saveState()\\\">Save State</button> <button (click)=\\\"restoreState()\\\">Restore State</button>\\n        <button (click)=\\\"resetState()\\\">Reset State</button>\\n      </div>\\n    </div>\\n    <ag-grid-angular\\n      #agGrid\\n      style=\\\"width: 100%; height: 500px;\\\"\\n      id=\\\"myGrid\\\"\\n      class=\\\"ag-theme-balham\\\"\\n      [columnDefs]=\\\"columnDefs\\\"\\n      [defaultColDef]=\\\"defaultColDef\\\"\\n      [debug]=\\\"true\\\"\\n      [rowData]=\\\"rowData\\\"\\n      (gridReady)=\\\"onGridReady($event)\\\"\\n    ></ag-grid-angular>\\n  </div>\\n</div>\\n\"","import { Component, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport 'ag-grid-enterprise';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  @ViewChild('agGrid') agGrid;\n\n  private gridApi;\n  private gridColumnApi;\n\n  private columnDefs;\n  private defaultColDef;\n  private rowData: [];\n\n  private style: { width: string; height: string };\n\n  constructor(private http: HttpClient) {\n    this.columnDefs = [\n      {\n        headerName: 'Athconste',\n        field: 'athconste',\n        width: 150\n      },\n      {\n        headerName: 'Age',\n        field: 'age',\n        width: 90\n      },\n      {\n        headerName: 'Country',\n        field: 'country',\n        width: 120,\n        enableRowGroup: true\n      },\n      {\n        headerName: 'Year',\n        field: 'year',\n        width: 90\n      },\n      {\n        headerName: 'Date',\n        field: 'date',\n        width: 110,\n        comparator: dateComparator\n      },\n      {\n        headerName: 'Medals',\n        children: [\n          {\n            headerName: 'Total',\n            field: 'total',\n            columnGroupShow: 'closed',\n            width: 125\n          },\n          {\n            headerName: 'Gold',\n            field: 'gold',\n            columnGroupShow: 'open',\n            width: 125\n          },\n          {\n            headerName: 'Silver',\n            field: 'silver',\n            columnGroupShow: 'open',\n            width: 125\n          },\n          {\n            headerName: 'Bronze',\n            field: 'bronze',\n            columnGroupShow: 'open',\n            width: 125\n          }\n        ]\n      }\n    ];\n    this.defaultColDef = {\n      sortable: true,\n      resizable: true\n    };\n  }\n\n  printState() {\n    const colState = this.gridColumnApi.getColumnState();\n    const groupState = this.gridColumnApi.getColumnGroupState();\n    const sortState = this.gridApi.getSortModel();\n    const filterState = this.gridApi.getFilterModel();\n    console.log('***********************');\n    console.log('colState: ', colState);\n    console.log('groupState: ', groupState);\n    console.log('sortState: ', sortState);\n    console.log('filterState: ', filterState);\n    console.log('***********************');\n  }\n\n  saveState() {\n    window.localStorage['fiddle-0021-columnState'] = JSON.stringify(this.gridColumnApi.getColumnState());\n    window.localStorage['fiddle-0021-groupState'] = JSON.stringify(this.gridColumnApi.getColumnGroupState());\n    window.localStorage['fiddle-0021-sortModel'] = JSON.stringify(this.gridApi.getSortModel());\n    window.localStorage['fiddle-0021-filterState'] = JSON.stringify(this.gridApi.getFilterModel());\n    console.log('column state saved');\n  }\n\n  restoreState() {\n\n    const columnState: any = window.localStorage['fiddle-0021-columnState'],\n      groupState: any = window.localStorage['fiddle-0021-groupState'],\n      sortModel: any = window.localStorage['fiddle-0021-sortModel'],\n      filterState: any = window.localStorage['fiddle-0021-filterState'];\n\n    if (columnState) {\n      this.gridColumnApi.setColumnState(JSON.parse(columnState));\n    }\n    if (groupState) {\n      this.gridColumnApi.setColumnGroupState(JSON.parse(groupState));\n    }\n    if (sortModel) {\n      this.gridApi.setSortModel(JSON.parse(sortModel));\n    }\n    if (filterState) {\n      this.gridApi.setFilterModel(JSON.parse(filterState));\n    }\n    console.log('column state restored');\n  }\n\n  resetState() {\n    this.gridColumnApi.resetColumnState();\n    this.gridColumnApi.resetColumnGroupState();\n    this.gridApi.setSortModel(null);\n    this.gridApi.setFilterModel(null);\n    console.log('column state reset');\n  }\n\n  showAthconste(show) {\n    this.gridColumnApi.setColumnVisible('athconste', show);\n  }\n\n  showMedals(show) {\n    this.gridColumnApi.setColumnsVisible(['total', 'gold', 'silver', 'bronze'], show);\n  }\n\n  pinAthconste(pin) {\n    this.gridColumnApi.setColumnPinned('athconste', pin);\n  }\n\n  pinAge(pin) {\n    this.gridColumnApi.setColumnPinned('age', pin);\n  }\n\n  onResize(event: any): void {\n    this.stretchGrid(event.target.innerWidth, event.target.innerHeight);\n  }\n\n  stretchGrid(width: number, height: number): void {\n    this.style = {\n      width: width + 'px',\n      height: (height - (height * .1)) + 'px'\n    };\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n\n    this.http\n      .get(\n        'https://raw.githubusercontent.com/ag-grid/ag-grid/master/packages/ag-grid-docs/src/olympicWinnersSmall.json'\n      )\n      .subscribe((data: any) => {\n        this.rowData = data;\n      });\n\n    params.api.addGlobalListener(function(type, event) {\n      if (type.indexOf('column') >= 0) {\n        console.log('Got column event: ', event);\n      }\n    });\n\n    this.stretchGrid(window.innerWidth, window.innerHeight);\n  }\n}\n\nfunction dateComparator(date1, date2) {\n  const date1Number = monthToComparableNumber(date1);\n  const date2Number = monthToComparableNumber(date2);\n  if (date1Number === null && date2Number === null) {\n    return 0;\n  }\n  if (date1Number === null) {\n    return -1;\n  }\n  if (date2Number === null) {\n    return 1;\n  }\n  return date1Number - date2Number;\n}\n\nfunction monthToComparableNumber(date) {\n  if (date === undefined || date === null || date.length !== 10) {\n    return null;\n  }\n  const yearNumber = date.substring(6, 10);\n  const monthNumber = date.substring(3, 5);\n  const dayNumber = date.substring(0, 2);\n  const result = yearNumber * 10000 + monthNumber * 100 + dayNumber;\n  return result;\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\n// HttpClient\nimport { HttpClientModule } from '@angular/common/http';\n\n// ag-grid\nimport { AgGridModule } from 'ag-grid-angular';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule, // <-- import the FormsModule before binding with [(ngModel)]\n    HttpClientModule,\n    AgGridModule.withComponents([])\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { LicenseManager } from 'ag-grid-enterprise';\n\n\nfetch('assets/license.json').then((response: any) => {\n  return response.json();\n}).then((data: any) => {\n  LicenseManager.setLicenseKey(data.license);\n  if (environment.production) {\n    enableProdMode();\n  }\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n});\n\n"],"sourceRoot":""}