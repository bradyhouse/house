{"version":3,"sources":["/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src async","/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/app.component.html","/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/app.component.ts","/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/app.module.ts","/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/slick-grid-auto-size.service.ts","/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/slick-grid-resize.service.ts","/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/environments/environment.ts","/Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src async\n// module id = ../../../../../src async recursive\n// module chunks = 3","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div #container>\\n  <div #table class=\\\"grid\\\" [ngStyle]=\\\"{'height': height + 'px'}\\\"></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 3","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\nimport {SlickGridAutoSizeService} from './slick-grid-auto-size.service';\nimport {SlickGridResizeService} from './slick-grid-resize.service';\n\ndeclare let Slick: any, $: any, moment: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [SlickGridAutoSizeService, SlickGridResizeService]\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('table') table: ElementRef;\n  @ViewChild('container') container: ElementRef;\n  private _grid: any;\n  private _dataView: any;\n\n  height: number;\n\n  constructor(private _slickGridAutoSizeService: SlickGridAutoSizeService,\n              private _slickGridResizeService: SlickGridResizeService) {\n    this.height = window.innerHeight;\n  }\n\n  ngAfterViewInit() {\n    this._slickGridAutoSizeService.table = this.table.nativeElement;\n    this._slickGridResizeService.init(this.container.nativeElement, this._slickGridAutoSizeService);\n    this._render();\n  }\n\n  tooltipFormatter(sparkline: any, options: any, fields: any) {\n    switch(fields.color) {\n      case 'white':\n        switch (fields.percent) {\n          case 25:\n            return 'Stage 3';\n          case 50:\n            return 'Stage 2';\n          default:\n            return 'Stage 1';\n        }\n      default:\n        switch (fields.percent) {\n          case 25:\n            return 'Stage 1';\n          case 50:\n            return 'Stage 2';\n          case 75:\n            return 'Stage 3';\n          default:\n            return 'Stage 4';\n        }\n    }\n\n  }\n\n  sparkLineRender(cellNode: any, row: any, dataContext: any, colDef: any) {\n    const vals: any[] = [\n      dataContext['n2'], dataContext['n1']\n\n      ],\n    cell: any = $(cellNode);\n\n    if (cell && cell.empty()) {\n      cell.empty().sparkline(\n        vals, {\n          type: 'pie',\n          sliceColors: ['white', 'green'],\n          borderWidth: 1,\n          offset: -90,\n          tooltipFormatter: (sparkline: any, options: any, fields: any) => this.tooltipFormatter(sparkline, options, fields)\n        }\n      );\n    }\n  }\n\n  waitingFormatter(value: any) {\n    return 'loading...';\n  }\n\n  private _render() {\n    const alphabet = '',\n      chartColumns: any[] = [{\n        id: 'run',\n        field: 'run',\n        name: 'Run #',\n        forceWidth: true\n      },{\n        id: 'runTime',\n        field: 'runTime',\n        name: 'Time',\n        forceWidth: true\n      },{\n        id: 'stage',\n        field: 'n1'\n      },{\n        id: 'chart',\n        name: 'Stage',\n        sortable: false,\n        formatter: (value: any) => this.waitingFormatter(value),\n        rerenderOnResize: true,\n        asyncPostRender: (cellNode: any, row: any, dataContext: any, colDef: any) => this.sparkLineRender(cellNode, row, dataContext, colDef)\n      }],\n      visibleChartColumns: any[] = [{\n        id: 'run',\n        field: 'run',\n        name: 'Run #',\n        forceWidth: true\n      },{\n        id: 'runTime',\n        field: 'runTime',\n        name: 'Time',\n        forceWidth: true\n      },{\n        id: 'chart',\n        name: 'Stage',\n        sortable: false,\n        formatter: (value: any) => this.waitingFormatter(value),\n        rerenderOnResize: true,\n        asyncPostRender: (cellNode: any, row: any, dataContext: any, colDef: any) => this.sparkLineRender(cellNode, row, dataContext, colDef)\n      }],\n      dataColumns: any[] = alphabet.split('').map((l: any, i: number) => {\n        return {\n          id: l,\n          field: l,\n          name: String(l).toUpperCase(),\n          forceWidth: true\n        };\n      }),\n      columns: any[] = dataColumns.concat(chartColumns),\n      visibleColumns: any[] = dataColumns.concat(visibleChartColumns),\n      _columnFilters: any = {},\n      filter: Function = (item) => {\n        console.log(item);\n        for (const columnId in _columnFilters) {\n          if (columnId !== undefined && _columnFilters[columnId] !== '') {\n            if (columnId === 'chart') {\n              const val:string = String(item['n1']);\n              if (val !== _columnFilters['chart']) {\n                return false;\n              }\n            } else {\n              const c: any = this._grid.getColumns()[this._grid.getColumnIndex(columnId)],\n                val: string = String(item[c.field]),\n                filterVal: string = String(_columnFilters[columnId]);\n              if (val.indexOf(filterVal) === -1) {\n                return false;\n              }\n            }\n          }\n        }\n        return true;\n      },\n      options: any = {\n        enableCellNavigation: true,\n        showHeaderRow: true,\n        explicitInitialization: true,\n        headerRowHeight: 30,\n        enableAsyncPostRender: true\n      },\n      data: any[] = [];\n\n    let date: Date = new Date();\n\n    for (let i = 0; i < 100; i++) {\n      const item: any = {},\n        rndNum: number = Math.round(Math.random() * 4),\n        phase: number = rndNum === 0 ? 1 : rndNum,\n        phaseRemainder: number = 4 - phase;\n      item['id'] = i;\n      alphabet.split('').forEach((l: string, li: number) => {\n        if (li === 0) {\n          item[l] = i;\n        } else {\n          item[l] = Math.round(Math.random() * 1000);\n        }\n      });\n      date = moment(date).add(60, 'm').toDate();\n      item['run'] = i + 1;\n      item['runTime'] = moment(date).format('HH:mm');\n      item['n1'] = phase;\n      item['n2'] = phaseRemainder;\n\n      data[i] = item;\n\n    }\n\n\n    this._dataView = new Slick.Data.DataView();\n    this._dataView.setItems(data);\n    this._dataView.setFilter(filter);\n    this._grid = new Slick.Grid(this.table.nativeElement, this._dataView, columns, options);\n    this._slickGridAutoSizeService.grid = this._grid;\n    this._slickGridAutoSizeService.autoSizeColumns();\n\n    this._dataView.onRowCountChanged.subscribe((e, args) => {\n      this._grid.updateRowCount();\n      this._grid.render();\n    });\n\n    this._dataView.onRowsChanged.subscribe((e, args) => {\n      this._grid.invalidateRows(args.rows);\n      this._grid.render();\n    });\n\n\n    $(this._grid.getHeaderRow()).delegate(':input', 'change keyup', (e) => {\n      const columnId = $(e.currentTarget).data('columnId');\n      if (columnId !== null) {\n        _columnFilters[columnId] = $.trim($(e.currentTarget).val());\n        this._dataView.refresh();\n      }\n    });\n\n    this._grid.onHeaderRowCellRendered.subscribe((e, args) => {\n      $(args.node).empty();\n      $('<input type=\\'text\\'>')\n        .data('columnId', args.column.id)\n        .val(_columnFilters[args.column.id])\n        .width('calc(92%)')\n        .height('calc(.8em)')\n        .appendTo(args.node);\n    });\n\n    this._grid.init();\n    this._grid.invalidate();\n    this._grid.render();\n    this._grid.setColumns(visibleColumns);\n\n\n\n    const mainGrid = $('.grid').eq(2),\n      colFixedGrid = $('.grid').eq(1);\n\n    colFixedGrid.find('.slick-header').height(mainGrid.find('.slick-header').height());\n    colFixedGrid.find('.slick-header-columns').height(mainGrid.find('.slick-header-columns').outerHeight() * 3);\n    colFixedGrid.find('.slick-header-column').outerHeight(colFixedGrid.find('.slick-header-columns').height());\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/app.module.ts","declare let _:any;\n\nexport class SlickGridAutoSizeService {\n    table:any;\n    grid:any;\n\n    autoSizeColumns() {\n        if (this.grid && this.table) {\n            let columns: any[] = this.grid.getColumns();\n            this.resizeColumnsToFitText(columns);\n            this.resizeColumnsToFillPanel(columns);\n            this.grid.setColumns(columns);\n            columns = null;\n        }\n    }\n\n    autoSizeColumnsForRow(row:any) {\n        if (this.grid && row) {\n            let columns:any[] = this.grid.getColumns();\n            columns.forEach((column:any) => {\n                let value:any = row[column.field];\n                if (column.formatter) {\n                    value = column.formatter(null, null, value, column, row);\n                }\n                if(this.table) {\n                    let actualWidth:number = this.getTextWidth(this.table, value);\n                    if (!column.forceWidth && column.width < actualWidth) {\n                        column.width = column.forceWidth = actualWidth;\n                    }\n                }\n                value = null;\n            });\n            this.grid.setColumns(columns);\n            columns = null;\n        }\n    }\n\n    private getTextWidth(table:HTMLElement, value:string):number {\n        let dummyContainer = document.createElement('span');\n        dummyContainer.className = 'slick-cell';\n        dummyContainer.innerHTML = value;\n        table.appendChild(dummyContainer);\n        let width:number = dummyContainer.offsetWidth;\n        table.removeChild(dummyContainer);\n        dummyContainer = null;\n        return width;\n    }\n\n    private resizeColumnsToFitText(columns:any[]) {\n        let headers:any[] = this.table.getElementsByClassName('slick-column-name');\n        Array.prototype.forEach.call(headers, (header:any) => {\n            let column:any = _.find(columns, {name: header.textContent});\n            if (column && !column.forceWidth) {\n                column.width = header.offsetWidth + 30;\n            }\n            column = null;\n        });\n        headers = null;\n    }\n\n    private resizeColumnsToFillPanel(columns:any[]) {\n        let totalWidth:number = this.calculateTotalWidth(columns);\n        let panelWidth:number = this.table.offsetWidth - 18;\n        if (totalWidth < panelWidth) {\n            let addition:number = (panelWidth - totalWidth) / columns.length;\n            let padding:number = 0;\n            columns.forEach((column:any) => {\n                if (column.forceWidth) {\n                    padding += addition;\n                } else {\n                    column.width += addition + padding;\n                    padding = 0;\n                }\n            });\n        }\n    }\n\n    private calculateTotalWidth(columns:any[]):number {\n        let width:number = 0;\n        columns.forEach((column:any) => {\n            width += column.width;\n        });\n        return width;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/slick-grid-auto-size.service.ts","import { SlickGridAutoSizeService } from './slick-grid-auto-size.service';\ndeclare let ResizeSensor:any;\n\nexport class SlickGridResizeService {\n    private _resizeSensor:any;\n    private _resizeTimeout:any;\n\n    init(element:any, slickGridAutoSizeService:SlickGridAutoSizeService) {\n        this._resizeSensor = new ResizeSensor(element, () => {\n            this.resize(slickGridAutoSizeService);\n        });\n    }\n\n    private resize(slickGridAutoSizeService:SlickGridAutoSizeService) {\n        if (this._resizeTimeout) {\n            clearTimeout(this._resizeTimeout);\n        }\n\n        this._resizeTimeout = setTimeout(() => {\n            if (slickGridAutoSizeService.grid) {\n                slickGridAutoSizeService.grid.resizeCanvas();\n                slickGridAutoSizeService.autoSizeColumns();\n            }\n        }, 100);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/app/slick-grid-resize.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/bradyhouse/github/house_slickgridtreeplus/fiddles/angular2-cli/fiddle-0018-SlickGridSparkLine/src/main.ts"],"sourceRoot":"webpack:///"}