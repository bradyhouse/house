{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.ts","./src/app/components/components.module.ts","./src/app/components/header/header.component.css","./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","./src/app/components/toolbar/toolbar.component.css","./src/app/components/toolbar/toolbar.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/tooltip/tooltip.component.css","./src/app/components/tooltip/tooltip.component.html","./src/app/components/tooltip/tooltip.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/notification-queue/notification-queue.component.css","./src/app/notification-queue/notification-queue.component.html","./src/app/notification-queue/notification-queue.component.ts","./src/app/notify/notify.module.ts","./src/app/notify/notify.service.ts","./src/app/notify/refresh/refresh.service.ts","./src/app/notify/refresh/refresh.ts","./src/app/state/local-storage/local-storage.service.ts","./src/app/state/state.module.ts","./src/app/state/state.service.ts","./src/app/state/state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { NotificationQueueComponent }      from './notification-queue/notification-queue.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: 'dashboard',  component: DashboardComponent },\n  { path: 'notification', component: NotificationQueueComponent }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload'})],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-primary navbar-top\\\">\\n  <div class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li id=\\\"description\\\" class=\\\"navbar-brand\\\" style=\\\"font-weight: 700; color: whitesmoke;\\\">\\n        Web Notification API - Hello World!\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav my-2 my-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a id=\\\"githubLink\\\" class=\\\"nav-item\\\" style=\\\"font-weight: 700; color: whitesmoke;\\\" alt=\\\"Fork me on GitHub\\\" target=\\\"_blank\\\" title=\\\"View Source\\\"\\n           href=\\\"https://github.com/bradyhouse/house/blob/master/fiddles/angular2-cli/fiddle-0039-WebNotificationsHW\\\">\\n          Fork Me On Github\\n        </a>\\n      </li>\\n\\n    </ul>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import {\n  Component, OnInit\n} from '@angular/core';\nimport { StateService } from './state/state.service';\nimport { LocalStorageService } from './state/local-storage/local-storage.service';\nimport { NotifyService } from './notify/notify.service';\nimport { BaseComponent } from './app';\nimport * as NotifyDomain from './notify/notify';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent extends BaseComponent implements OnInit {\n\n  constructor(private _stateService: StateService,\n              private _localStorageService: LocalStorageService,\n              private _notifyService: NotifyService,\n              private _router: Router) {\n    super();\n    this.subscriptions.push(_stateService.notificationsChange$\n      .subscribe(\n        (notifications: NotifyDomain.Notification[]) => this.onNotificationsStateChange(notifications)\n      ));\n  }\n\n  ngOnInit(): void {\n    this._localStorageService.read();\n    this._localStorageService.updateStateService(this._stateService.type, this._stateService);\n    this._stateService.isReady = true;\n    this._notifyService.requestPermission();\n    this._notifyService.isEnabled = true;\n    window.setTimeout(() => {\n      this.showNotification(this._stateService.notifications);\n    }, 1000);\n  }\n\n  onNotificationsStateChange(notifications: NotifyDomain.Notification[]) {\n    this.showNotification(notifications);\n  }\n  onNotificationClick(event: any) {\n    console.log('onNotificationClick', event);\n  }\n\n  private async showNotification(notifications: NotifyDomain.Notification[]): Promise<void> {\n    if (notifications.length && this._notifyService.isPermission && this._notifyService.isEnabled)  {\n      const lastNotification = notifications[notifications.length - 1];\n      const options: any = {\n        body: lastNotification.message,\n        icon: './assets/7.png',\n        actions: [{\n          action: 0,\n          title: 'Open',\n          icon: './assets/question.png'\n        }, {\n          action: 1,\n          title: 'Acknowledge',\n          icon: './assets/check.png'\n        }],\n        data: {\n          id: lastNotification.id\n        },\n        silent: false,\n        requireInteraction: false,\n        persistent: false,\n        sticky: false,\n        notificationCloseEvent: false\n      };\n      const registerServiceWorker = async () => {\n        // tslint:disable-next-line: no-shadowed-variable\n        const swRegistration = await navigator.serviceWorker.register('./sw.js');\n        return swRegistration;\n      };\n      const swRegistration = await registerServiceWorker();\n\n      navigator.serviceWorker.addEventListener('message', (event: any) => {\n        const actionId = event && event.data.message.action ? Number(event.data.message.action) : null;\n        const notificationId = actionId ? Number(event.data.message.id) : null;\n        switch (actionId) {\n          case 0:\n            this._router.navigate(['/notification']);\n            break;\n          case 1:\n            this._notifyService.acknowledge(notificationId);\n            break;\n        }\n      });\n      window.setTimeout(() => {\n        this._notifyService.playAlert();\n      }, 1000);\n      swRegistration.showNotification('Alert!!!', options);\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {\n  BrowserModule\n} from '@angular/platform-browser';\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  HttpModule\n} from '@angular/http';\nimport {\n  AgGridModule\n} from '@ag-grid-community/angular';\nimport {\n  AppComponent\n} from './app.component';\nimport {\n  ComponentsModule\n} from './components/components.module';\nimport {\n  TooltipComponent\n} from './components/tooltip/tooltip.component';\nimport {\n  DashboardComponent\n} from './dashboard/dashboard.component';\nimport {\n  StateModule\n} from './state/state.module';\nimport {\n  AppRoutingModule\n} from './app-routing.module';\nimport {\n  NotificationQueueComponent\n} from './notification-queue/notification-queue.component';\nimport {\n  NotifyModule\n} from './notify/notify.module';\nimport {\n  APP_BASE_HREF,\n  LocationStrategy,\n  HashLocationStrategy\n} from '@angular/common';\n\n@NgModule({\n  declarations: [\n    NotificationQueueComponent,\n    DashboardComponent,\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // tslint:disable-next-line: deprecation\n    HttpModule,\n    AgGridModule.withComponents([TooltipComponent]),\n    ComponentsModule,\n    StateModule.forRoot(),\n    NotifyModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {\n  OnDestroy\n} from '@angular/core';\nimport {\n  ISubscription\n} from 'rxjs/Subscription';\n\nexport interface BaseServiceInterface extends OnDestroy {\n  subscriptions: ISubscription[];\n  ngOnDestroy(): void;\n  clearSubscriptions(): void;\n}\n\nexport abstract class BaseComponent implements BaseServiceInterface, OnDestroy {\n\n  subscriptions: ISubscription[];\n\n  constructor() {\n    this.subscriptions = [];\n  }\n  ngOnDestroy() {\n    this.clearSubscriptions();\n  }\n\n  clearSubscriptions() {\n    this.subscriptions.forEach((subscription: ISubscription) => {\n      subscription.unsubscribe();\n    });\n    this.subscriptions = [];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipComponent } from './tooltip/tooltip.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TooltipComponent,\n    ToolbarComponent,\n    HeaderComponent\n  ],\n  declarations: [TooltipComponent, HeaderComponent, ToolbarComponent]\n})\nexport class ComponentsModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/components.module.ts","module.exports = \"table {\\n    width: calc(100%) !important;\\n    padding: 0;\\n    margin: 0;\\n}\\n\\na {\\n    cursor: pointer;\\n}\\n\\n/*label {*/\\n\\n/*color: white !important;*/\\n\\n/*}*/\\n\\n/*.badge-medium {*/\\n\\n/*color: var(--blue7);*/\\n\\n/*}*/\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/header/header.component.css\n// module id = ./src/app/components/header/header.component.css\n// module chunks = main","module.exports = \"<app-toolbar [componentId]=\\\"'appHeader'\\\">\\n  <div content>\\n    <nav class=\\\"navbar navbar-expand navbar-dark\\\" style=\\\"height: 25px;\\\">\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li *ngIf=\\\"!isPermission\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [id]=\\\"'fiddleHeaderNotifyPermissionBtn'\\\" (click)=\\\"onNotifyPermissionBtnClick()\\\">\\n              <i class=\\\"far fa-bell\\\"></i> Enable Notifications\\n            </a>\\n          </li>\\n          <li *ngIf=\\\"isPermission\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [id]=\\\"'fiddleHeaderDisableBtn'\\\" (click)=\\\"onDisableBtnClick()\\\">\\n              <i class=\\\"fas fa-bell-slash\\\"></i> Disable Notifications\\n            </a>\\n          </li>\\n          <li *ngIf=\\\"!isSound\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" [id]=\\\"'fiddleHeaderEnableSoundBtn'\\\" (click)=\\\"onEnableSoundBtnClick()\\\">\\n                  <i class=\\\"fas fa-volume-up\\\"></i> Enable Sound\\n              </a>\\n          </li>\\n          <li *ngIf=\\\"isSound\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" [id]=\\\"'fiddleHeaderDisableSoundBtn'\\\" (click)=\\\"onDisableSoundBtnClick()\\\">\\n                  <i class=\\\"fas fa-volume-mute\\\"></i> Disable Sound\\n              </a>\\n          </li>\\n            \\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [id]=\\\"'fiddleHeaderResetBtn'\\\" (click)=\\\"onResetClick()\\\">\\n              <i class=\\\"fas fa-undo\\\"></i> Reset Grid\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n\\n    </nav>\\n  </div>\\n</app-toolbar>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/header/header.component.html\n// module id = ./src/app/components/header/header.component.html\n// module chunks = main","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  OnChanges,\n  DoCheck,\n  KeyValueDiffer,\n  OnInit,\n  KeyValueDiffers,\n  ElementRef,\n  ViewChild\n} from '@angular/core';\nimport { NotifyService } from '../../notify/notify.service';\nimport { BaseComponent } from '../../app';\n\nexport enum EventType {\n  Reset = 'Reset'\n}\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent extends BaseComponent {\n  @Output() event: EventEmitter <EventType>;\n  isPermission: boolean;\n  isEnabled: boolean;\n  isSound: boolean;\n\n  constructor(private _notifyService: NotifyService) {\n    super();\n    this.event = new EventEmitter();\n    this.isSound = _notifyService.isSound;\n    this.isPermission = _notifyService.isPermission;\n    this.subscriptions.push(_notifyService.isSoundChange$\n      .subscribe(\n        (sound: boolean) => this.onNotifyIsSoundChange(sound)\n      ));\n    this.subscriptions.push(_notifyService.isPermissionChange$\n      .subscribe(\n        (permission: boolean) => this.onNotifyIsPermissionChange(permission)\n      ));\n    this.subscriptions.push(_notifyService.isEnabledChange$\n      .subscribe(\n        (enable: boolean) => this.onNotifyIsEnabledChange(enable)\n      ));\n  }\n\n  onResetClick() {\n      this.event.emit(EventType.Reset);\n  }\n\n  onDisableBtnClick() {\n   this._notifyService.isEnabled = false;\n  }\n\n  onEnableSoundBtnClick() {\n    this._notifyService.isSound = this.isSound = true;\n  }\n\n  onDisableSoundBtnClick() {\n    this._notifyService.isSound = this.isSound = false;\n  }\n\n  onNotifyPermissionBtnClick(): void {\n    this._notifyService.requestPermission();\n    window.setTimeout(() => {\n      if(this._notifyService.isPermission) {\n        this.isPermission = true;\n      }\n    }, 1000);\n  }\n\n  onNotifyIsSoundChange(sound: boolean) {\n    this.isSound = sound;\n  }\n\n  onNotifyIsPermissionChange(isPermission: boolean) {\n    this.isPermission = isPermission;\n  }\n\n  onNotifyIsEnabledChange(isEnabled: boolean) {\n    this.isPermission = isEnabled;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/header/header.component.ts","module.exports = \"* {\\n    background-color: var(--grey2) !important;\\n    color: white;\\n}\\n\\n.panel--raised {\\n    margin: 0;\\n    padding: .5em 1em;\\n    font-size: .75em;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/toolbar/toolbar.component.css\n// module id = ./src/app/components/toolbar/toolbar.component.css\n// module chunks = main","module.exports = \"<div [id]=\\\"componentId || 'toolbar1'\\\" class=\\\"panel--raised\\\">\\n  <div class=\\\"panel__body\\\">\\n      <ng-content select=\\\"[content]\\\"></ng-content>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/toolbar/toolbar.component.html\n// module id = ./src/app/components/toolbar/toolbar.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent {\n\n    @Input() componentId: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/toolbar/toolbar.component.ts","module.exports = \":host {\\n  position: absolute;\\n  width: auto;\\n  min-width: 200px;\\n  max-width: 250px;\\n  height: auto;\\n  border: 1px solid var(--blue6);\\n  background-color: var(--blue7);\\n  overflow: hidden;\\n  pointer-events: none;\\n  -webkit-transition: opacity 1s;\\n  transition: opacity 1s;\\n  padding: 5px;\\n  -webkit-filter: drop-shadow(4px 4px 4px gray);\\n          filter: drop-shadow(4px 4px 4px gray);\\n}\\n\\n:host.ag-tooltip-hiding {\\n  opacity: 0;\\n}\\n\\n.custom-tooltip p {\\n  margin: 5px;\\n  white-space: nowrap;\\n}\\n\\n.custom-tooltip {\\n  font-weight: bold;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tooltip/tooltip.component.css\n// module id = ./src/app/components/tooltip/tooltip.component.css\n// module chunks = main","module.exports = \"<div class=\\\"custom-tooltip\\\">\\n  {{tooltipText}}\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/tooltip/tooltip.component.html\n// module id = ./src/app/components/tooltip/tooltip.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ITooltipAngularComp } from '@ag-grid-community/angular';\n\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.css']\n})\nexport class TooltipComponent implements ITooltipAngularComp {\n\n  params: any;\n  data: any;\n  tooltipText: string;\n  \n  agInit(params): void {\n    this.params = params;\n    this.data = params.api.getDisplayedRowAtIndex(params.rowIndex).data;\n    this.tooltipText = this.params.tooltip || 'n/a';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tooltip/tooltip.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\" style=\\\"height: 25px;\\\">\\n  <ul class=\\\"navbar-nav mr-auto\\\">\\n    <li class=\\\"nav-item active\\\"><a routerLink=\\\"/dashboard\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Dashboard</a></li>\\n    <li class=\\\"nav-item\\\"><a routerLink=\\\"/notification\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Notifications</a></li>\\n  </ul>\\n</nav>\\n<app-header (event)=\\\"onHeaderClick($event)\\\"></app-header>\\n<ag-grid-angular\\n      #agGrid style=\\\"width: 100%; height: 100%;\\\" id=\\\"myGrid\\\" class=\\\"ag-theme-balham\\\" [columnDefs]=\\\"columnDefs\\\"\\n       [masterDetail]=\\\"true\\\"\\n       [modules]=\\\"modules\\\"\\n       [keepDetailRows]=\\\"true\\\"\\n       [defaultColDef]=\\\"defaultColDef\\\"\\n       [keepDetailRowsCount]=\\\"keepDetailRowsCount\\\"\\n       [detailCellRendererParams]=\\\"detailCellRendererParams\\\"\\n       [defaultExportParams]=\\\"defaultExportParams\\\"\\n       [frameworkComponents]=\\\"frameworkComponents\\\"\\n       [excelStyles]=\\\"excelStyles\\\"\\n       [rowData]=\\\"rowData\\\"\\n       (firstDataRendered)=\\\"onFirstDataRendered($event)\\\"\\n       (gridReady)=\\\"onGridReady($event)\\\"\\n       (sortChanged)=\\\"onGridStateChanged()\\\"\\n      (filterChanged)=\\\"onGridStateChanged()\\\"\\n      (columnMoved)=\\\"onGridStateChanged()\\\"\\n      (columnPinned)=\\\"onGridStateChanged()\\\"\\n      (columnResized)=\\\"onGridStateChanged()\\\"\\n      (columnVisible)=\\\"onGridStateChanged()\\\"\\n    ></ag-grid-angular>\\n    <!--<nav *ngIf=\\\"ifInstructions\\\" class=\\\"navbar navbar-expand navbar-dark bg-success fixed-bottom navbar-bottom\\\">\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"navbar-nav my-2 my-lg-0\\\">\\n          <li class=\\\"nav-item\\\">\\n            <span id=\\\"instructions\\\" style=\\\"font-weight: 700; color: whitesmoke;\\\" >\\n              \\n            </span>\\n          </li>\\n        </ul>\\n      </div>\\n    </nav>-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import {\n  Component,\n  ViewChild,\n  OnInit\n} from '@angular/core';\nimport {\n  Http\n} from '@angular/http';\n\nimport 'rxjs/add/operator/map';\nimport {\n  TooltipComponent\n} from '../components/tooltip/tooltip.component';\nimport {\n  AllModules\n} from '@ag-grid-enterprise/all-modules';\nimport {\n  LocalStorageService\n} from '../state/local-storage/local-storage.service';\nimport {\n  BaseComponent\n} from '../app';\nimport {\n  StateService\n} from '../state/state.service';\nimport {\n  GridState\n} from '../state/state';\nimport {\n  EventType as HeaderEventType\n} from '../components/header/header.component';\n\nimport * as NotifyDomain from '../notify/notify';\nimport { NotifyService } from '../notify/notify.service';\nimport { Router } from '@angular/router';\n\n\nfunction cell(text: any, styleId: any = null) {\n  return {\n    styleId: styleId,\n    data: {\n      type: /^\\d+$/.test(text) ? 'Number' : 'String',\n      value: String(text)\n    }\n  };\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent extends BaseComponent implements OnInit {\n\n  gridApi;\n  gridColumnApi;\n  modules: any[] = AllModules;\n  columnDefs: any;\n  detailCellRendererParams: any;\n  rowData: any;\n  keepDetailRowsCount = 2;\n  defaultExportParams: any;\n  defaultColDef: any;\n  excelStyles: any;\n  ifInstructions = true;\n  frameworkComponents: any;\n  isReady = false;\n\n  // tslint:disable-next-line: deprecation\n  constructor(private http: Http,\n    private stateService: StateService,\n    private localStorageService: LocalStorageService,\n    private notifyService: NotifyService,\n    private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.configGrid();\n  }\n\n  onFirstDataRendered(params) {\n    this.autoSizeAllColumns(params);\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n\n    this.http\n      .get(\n        'https://raw.githubusercontent.com/ag-grid/ag-grid-docs/latest/src/javascript-grid-master-detail/simple/data/data.json'\n      )\n      .map((res: any) => res.json())\n      .subscribe(data => {\n        this.restoreGridState(data);\n      });\n\n    setTimeout(() => {\n      this.ifInstructions = false;\n    }, 3000);\n  }\n\n  onGridStateChanged(): void {\n    if (this.isReady) {\n      this.stateService.gridState = this.captureGridState();\n    }\n  }\n\n  onHeaderClick(eventType: HeaderEventType) {\n    if (eventType === HeaderEventType.Reset) {\n      this.stateService.gridState = {};\n      window.location.reload();\n    }\n  }\n\n  private configGrid(): void {\n    this.columnDefs = [{\n        field: 'name',\n        cellRenderer: 'agGroupCellRenderer',\n        cellClass: 'body',\n        tooltipField: 'name',\n        tooltipComponentParams: {\n          tooltip: 'Customer\\'s Name or nickname or alias or whatever'\n        }\n      },\n      {\n        field: 'account',\n        colId: 'account',\n        cellClass: 'body',\n        tooltipField: 'account',\n        tooltipComponentParams: {\n          tooltip: 'Six digit System Generated Customer\\'s Account Number'\n        }\n      },\n      {\n        field: 'calls',\n        cellClass: 'body',\n        tooltipField: 'calls',\n        tooltipComponentParams: {\n          tooltip: 'Total Calls Involving this Customer'\n        }\n      },\n      {\n        field: 'minutes',\n        valueFormatter: 'x.toLocaleString() + \"m\"',\n        cellClass: 'bodyFloat',\n        tooltipField: 'minutes',\n        tooltipComponentParams: {\n          tooltip: 'Duration of all Calls Involving this Specific Customer'\n        }\n      },\n      {\n        field: 'Comment',\n        cellClass: 'body'\n      },\n      {\n        field: 'rating',\n        cellClass: 'body',\n        tooltipField: 'rating',\n        tooltipComponentParams: {\n          tooltip: 'customer\\'s rating'\n        }\n      }\n    ];\n\n    this.defaultColDef = {\n      filter: true,\n      resizable: true,\n      sortable: true,\n      tooltipComponent: 'fiddleTooltipComponent'\n    };\n\n    this.frameworkComponents = {\n      fiddleTooltipComponent: TooltipComponent\n    };\n\n    this.detailCellRendererParams = {\n      detailGridOptions: {\n        columnDefs: [{\n            field: 'callId',\n            tooltipField: 'callId',\n            tooltipComponentParams: {\n              tooltip: 'Id used to Identify the Call'\n            }\n          },\n          {\n            field: 'direction',\n            tooltipField: 'direction',\n            tooltipComponentParams: {\n              tooltip: 'Inbound or Outbound Call'\n            }\n          },\n          {\n            field: 'number',\n            tooltipField: 'number',\n            tooltipComponentParams: {\n              tooltip: 'The Caller\\'s Phone Number'\n            }\n          },\n          {\n            field: 'duration',\n            tooltipField: 'duration',\n            valueFormatter: 'x.toLocaleString() + \"s\"',\n            tooltipComponentParams: {\n              tooltip: 'Length of all Call'\n            }\n          },\n          {\n            field: 'switchCode',\n            tooltipField: 'switchCode',\n            tooltipComponentParams: {\n              tooltip: 'Switch Board Indicator'\n            }\n          }\n        ],\n        defaultColDef: {\n          filter: true,\n          resizable: true,\n          sortable: true,\n          tooltipComponent: 'fiddleTooltipComponent'\n        },\n        frameworkComponents: {\n          fiddleTooltipComponent: TooltipComponent\n        },\n        onFirstDataRendered: (params) => {\n          this.autoSizeAllColumns(params);\n        }\n      },\n      getDetailRowData: (params) => {\n        setTimeout(() => {\n          params.successCallback(params.data.callRecords);\n        }, 2000);\n      },\n      template: '<div style=\"height: 100%; background-color: var(--blue6); padding: 10px;\">' +\n        '  <div ref=\"eDetailGrid\" style=\"height: 100%;\"></div>' +\n        '</div>',\n      sheetName: 'EntAgGridHierarchicalExport',\n      fileName: 'fiddle-0035',\n      columnWidth: '20'\n    };\n\n    this.defaultExportParams = {\n      getCustomContentBelowRow: (params: any) => {\n        if (params.node.data.callRecords && params.node.data.callRecords.length) {\n          return [\n            [\n              cell(''),\n              cell('callId', 'header'),\n              cell('direction', 'header'),\n              cell('number', 'header'),\n              cell('duration', 'header'),\n              cell('switchCode', 'header')\n            ]\n          ].concat(\n            params.node.data.callRecords.map((record: any) => {\n              return [\n                cell(''),\n                cell(record.callId, 'body'),\n                cell(record.direction, 'body'),\n                cell(record.number, 'body'),\n                cell(record.duration, 'body'),\n                cell(record.switchCode, 'body')\n              ];\n            }),\n            [\n              []\n            ]\n          );\n        }\n        return false;\n      }\n    };\n\n    this.excelStyles = [{\n        id: 'header',\n        interior: {\n          color: '#007BFF',\n          pattern: 'Solid'\n        },\n        font: {\n          color: '#FFFFFF'\n        },\n        alignment: {\n          horizontal: 'Left',\n          vertical: 'Middle'\n        }\n\n      },\n      {\n        id: 'headerNum',\n        interior: {\n          color: '#007BFF',\n          pattern: 'Solid'\n        },\n        alignment: {\n          horizontal: 'Right',\n          vertical: 'Middle'\n        }\n      },\n      {\n        id: 'body',\n        interior: {\n          color: '#ebf9ff',\n          pattern: 'DiagCross'\n        }\n      },\n      {\n        id: 'bodyInt',\n        interior: {\n          color: '#ebf9ff',\n          pattern: 'Solid'\n        },\n        numberFormat: {\n          format: '#,##0_);[Red](#,##0)'\n        },\n        alignment: {\n          horizontal: 'Right',\n          vertical: 'Middle'\n        }\n      },\n      {\n        id: 'bodyFloat',\n        numberFormat: {\n          format: '0.00'\n        },\n        interior: {\n          color: '#ebf9ff',\n          pattern: 'Solid'\n        },\n        alignment: {\n          horizontal: 'Right',\n          vertical: 'Middle'\n        }\n      },\n\n    ];\n  }\n\n  private restoreGridState(data: any[]): void {\n    const state: GridState = this.stateService.gridState;\n    console.log('restoreGridState > state', state);\n    window.setTimeout(() => {\n      if (this.gridApi && this.gridColumnApi && state) {\n        if (state.columnState) {\n          this.gridColumnApi.setColumnState(state.columnState);\n        }\n        if (state.columnGroupsState) {\n          this.gridColumnApi.setColumnGroupState(state.columnGroupsState);\n        }\n        if (state.sortModel) {\n          this.gridApi.setSortModel(state.sortModel);\n        }\n        if (state.filterModel) {\n          this.gridApi.setFilterModel(state.filterModel);\n        }\n        this.isReady = true;\n      }\n    }, 1000);\n    this.rowData = data;\n  }\n\n  private captureGridState(): GridState {\n    if (this.gridApi && this.gridColumnApi) {\n      return {\n        columnState: this.gridColumnApi.getColumnState(),\n        columnGroupsState: this.gridColumnApi.getColumnGroupState(),\n        sortModel: this.gridApi.getSortModel(),\n        filterModel: this.gridApi.getFilterModel()\n      };\n    }\n    return null;\n  }\n\n  private autoSizeAllColumns(params: any): void {\n    const allColumnIds: any[] = [];\n    params.columnApi.getAllColumns().forEach(function (column) {\n      allColumnIds.push(column.colId);\n    });\n    params.columnApi.autoSizeColumns(allColumnIds, false);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notification-queue/notification-queue.component.css\n// module id = ./src/app/notification-queue/notification-queue.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\" style=\\\"height: 25px;\\\">\\n  <ul class=\\\"navbar-nav mr-auto\\\">\\n    <li class=\\\"nav-item\\\"><a routerLink=\\\"/dashboard\\\" class=\\\"nav-link\\\">Dashboard</a></li>\\n    <li class=\\\"nav-item active\\\"><a routerLink=\\\"/notification\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Notifications</a></li>\\n  </ul>\\n</nav>\\n<app-header (event)=\\\"onHeaderClick($event)\\\"></app-header>\\n<ag-grid-angular\\n       #agGrid style=\\\"width: 100%; height: 100%;\\\" [id]=\\\"'queueGrid'\\\" class=\\\"ag-theme-balham\\\" \\n       [columnDefs]=\\\"columnDefs\\\"\\n       [modules]=\\\"modules\\\"\\n       [rowData]=\\\"rowData\\\"\\n       [defaultColDef]=\\\"defaultColDef\\\"\\n       (gridReady)=\\\"onGridReady($event)\\\"\\n       (sortChanged)=\\\"onGridStateChanged()\\\"\\n       (filterChanged)=\\\"onGridStateChanged()\\\"\\n       (columnMoved)=\\\"onGridStateChanged()\\\"\\n       (columnPinned)=\\\"onGridStateChanged()\\\"\\n       (columnResized)=\\\"onGridStateChanged()\\\"\\n       (columnVisible)=\\\"onGridStateChanged()\\\"\\n    ></ag-grid-angular>\\n    \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notification-queue/notification-queue.component.html\n// module id = ./src/app/notification-queue/notification-queue.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AllModules } from '@ag-grid-enterprise/all-modules';\nimport { BaseComponent } from '../app';\nimport { StateService } from '../state/state.service';\nimport * as NotifyDomain from '../notify/notify';\n\nimport {\n  GridState\n} from '../state/state';\n\nimport {\n  EventType as HeaderEventType\n} from '../components/header/header.component';\n\n@Component({\n  selector: 'app-notification-queue',\n  templateUrl: './notification-queue.component.html',\n  styleUrls: ['./notification-queue.component.css']\n})\nexport class NotificationQueueComponent extends BaseComponent implements OnInit {\n\n  gridApi;\n  gridColumnApi;\n  modules: any[] = AllModules;\n  columnDefs: any;\n  rowData: any;\n  defaultColDef: any;\n  isReady = false;\n\n  constructor(private _stateService: StateService) {\n    super();\n    this.subscriptions.push(_stateService.notificationsChange$\n      .subscribe(\n        (notifications: NotifyDomain.Notification[]) => this.onNotificationsStateChange(notifications)\n      ));\n    this.subscriptions.push(_stateService.isReadyChange$\n      .subscribe(\n        (isReady: boolean) => this.onIsReadyStateServiceChange(isReady)\n      ));\n  }\n\n  ngOnInit() {\n    this.configGrid();\n  }\n\n  onGridReady(params) {\n    console.log('onGridReady');\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n\n  onGridStateChanged(): void {\n    if (this.isReady) {\n      this._stateService.notificationsGridState = this.captureGridState();\n    }\n  }\n\n  onIsReadyStateServiceChange(isReady: boolean) {\n    if (isReady && this._stateService.notifications && this._stateService.notifications.length) {\n      this.restoreGridState(this._stateService.notifications);\n    }\n  }\n\n  onNotificationsStateChange(notifications: NotifyDomain.Notification[]) {\n    console.log('notificationQueue > onNotificationsStateChange');\n    if (notifications.length)  {\n      this.rowData = notifications;\n      this.restoreGridState(notifications);\n    }\n  }\n\n  onHeaderClick(eventType: HeaderEventType) {\n    if (eventType === HeaderEventType.Reset) {\n      this._stateService.notificationsGridState = {};\n      window.location.reload();\n    }\n  }\n\n  private configGrid() {\n    this.columnDefs = [{\n        field: 'id'\n      },\n      {\n        field: 'message'\n      },\n      {\n        field: 'status'\n      },\n      {\n        field: 'versionTimeStamp'\n      }\n    ];\n    this.defaultColDef = {\n      filter: true,\n      resizable: true,\n      sortable: true\n    };\n    if (this._stateService.notifications && this._stateService.notifications.length) {\n      this.rowData = this._stateService.notifications;\n    }\n\n  }\n\n  private restoreGridState(rowNodes: NotifyDomain.Notification[]): void {\n    const state: GridState = this._stateService.notificationsGridState;\n    console.log('restoreGridState > state', state);\n    window.setTimeout(() => {\n      if (this.gridApi && this.gridColumnApi && state) {\n        if (state.columnState) {\n          this.gridColumnApi.setColumnState(state.columnState);\n        }\n        if (state.columnGroupsState) {\n          this.gridColumnApi.setColumnGroupState(state.columnGroupsState);\n        }\n        if (state.sortModel) {\n          this.gridApi.setSortModel(state.sortModel);\n        }\n        if (state.filterModel) {\n          this.gridApi.setFilterModel(state.filterModel);\n        }\n        this.isReady = true;\n      }\n    }, 1000);\n    if (rowNodes && this.gridApi) {\n      this.gridApi.redrawRows({\n        rowNodes: rowNodes\n      });\n    }\n  }\n\n  private captureGridState(): GridState {\n    if (this.gridApi && this.gridColumnApi) {\n      return {\n        columnState: this.gridColumnApi.getColumnState(),\n        columnGroupsState: this.gridColumnApi.getColumnGroupState(),\n        sortModel: this.gridApi.getSortModel(),\n        filterModel: this.gridApi.getFilterModel()\n      };\n    }\n    return null;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notification-queue/notification-queue.component.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotifyService } from './notify.service';\nimport { RefreshService } from './refresh/refresh.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [NotifyService, RefreshService]\n})\nexport class NotifyModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n        ngModule: NotifyModule,\n        providers: [NotifyService, RefreshService]\n    };\n}\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notify/notify.module.ts","import {\n  Injectable\n} from '@angular/core';\nimport * as Domain from './notify';\nimport {\n  StateService\n} from '../state/state.service';\nimport {\n  BaseComponent\n} from '../app';\nimport {\n  RefreshService\n} from './refresh/refresh.service';\nimport {\n  RefreshStateEnum\n} from './refresh/refresh';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\ndeclare let _: any;\n\n\n@Injectable()\nexport class NotifyService extends BaseComponent implements Domain.NotifyServiceInterface {\n  isPermissionChange$: Observable<boolean>;\n  isSoundChange$: Observable<boolean>;\n  isEnabledChange$: Observable<boolean>;\n  notifications: Domain.Notification[];\n\n  private _isPermission: boolean;\n  private _isPermissionObserver: Observer<boolean>;\n  private _isSound: boolean;\n  private _isSoundObserver: Observer<boolean>;\n  private _isEnabled: boolean;\n  private _isEnableObserver: Observer<boolean>;\n\n  get isPermission(): boolean {\n    return this._isPermission;\n  }\n\n  set isPermission(permission: boolean) {\n    if (!_.isEqual(permission, this._isPermission)) {\n      this._isPermission = permission;\n      if (this._isPermissionObserver) {\n        this._isPermissionObserver.next(permission);\n      }\n    }\n  }\n\n  get isSound(): boolean {\n    return this._isSound;\n  }\n\n  set isSound(sound: boolean) {\n    this._isSound = sound;\n    if (this._isSoundObserver) {\n      this._isPermissionObserver.next(sound);\n    }\n  }\n\n  get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  set isEnabled(enabled: boolean) {\n    if (!_.isEqual(enabled, this._isEnabled)) {\n      this._isEnabled = enabled;\n      if (this.isPermission) {\n        if (!enabled) {\n          this._refreshService.stop();\n        } else {\n          this._refreshService.start();\n        }\n      }\n      if (this._isEnableObserver) {\n        this._isEnableObserver.next(enabled);\n      }\n    }\n  }\n\n  get isNotificationSupport(): boolean {\n    if (!('Notification' in window)) {\n      return false;\n    }\n    return true;\n  }\n  generate(): void {\n    const id: number = this.notifications && this.notifications.length ? this.notifications.length + 1 : 1;\n    const versionTimeStamp: number = (new Date()).getTime();\n    const notification: Domain.Notification = {\n      id: id,\n      message: 'Call your mother! (' + id + ')',\n      status: false,\n      versionTimeStamp: versionTimeStamp\n    };\n    this.notifications.push(notification);\n    this._stateService.notifications = this.notifications;\n  }\n\n  acknowledge(id: number): void {\n    this.notifications = this.notifications.filter((notification: Domain.Notification) => {\n      return notification.id !== id;\n    });\n    this._stateService.notifications = this.notifications;\n  }\n\n  playAlert(): void {\n    if (this.isSound) {\n      try {\n        const audio = new Audio();\n        audio.src = './assets/alert.mp3';\n        audio.load();\n        audio.play();\n      } catch {\n        // tslint:disable-next-line: no-console\n        console.info('Attempt to play alert sound failed.');\n      }\n    }\n  }\n\n  requestPermission(): void {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support notifications.');\n      this.isPermission = false;\n    } else {\n      if (this.checkNotificationPromise()) {\n        Notification.requestPermission()\n          .then((permission) => {\n            this.handlePermission(permission);\n          });\n      } else {\n        Notification.requestPermission((permission: any) => {\n          this.handlePermission(permission);\n        });\n      }\n    }\n  }\n\n  handlePermission(permission: string) {\n    if (permission === 'denied' || permission === 'default') {\n      this.isPermission = false;\n    } else {\n      this.isPermission = true;\n    }\n  }\n\n  checkNotificationPromise(): boolean {\n    try {\n      Notification.requestPermission().then();\n    } catch {\n      return false;\n    }\n    return true;\n  }\n\n\n  constructor(private _stateService: StateService,\n    private _refreshService: RefreshService) {\n\n    super();\n\n    this.notifications = [];\n    this._isSound = false;\n\n    this.isPermissionChange$ = new Observable <boolean> (\n      (observer: any) => this._isPermissionObserver = observer\n    ).share();\n\n    this.isEnabledChange$ = new Observable <boolean> (\n      (observer: any) => this._isEnableObserver = observer\n    ).share();\n\n    this.isSoundChange$ = new Observable <boolean> (\n      (observer: any) => this._isSoundObserver = observer\n    ).share();\n\n    this.subscriptions.push(_stateService.isReadyChange$\n      .subscribe(\n        (isReady: boolean) => this.onStateServiceIsReadyChange(isReady)\n      ));\n    this.subscriptions.push(_stateService.notificationsChange$\n      .subscribe(\n        (notifications: any) => this.onNotificationsStateChange(notifications)\n      ));\n    this.subscriptions.push(_refreshService.stateChange$\n      .subscribe(\n        (state: any) => this.onRefreshChange(state)\n      ));\n    this._refreshService.start();\n  }\n\n  onNotificationsStateChange(notifications: Domain.Notification[]): void {\n    if (!_.isEqual(notifications, this.notifications)) {\n      this.notifications = notifications;\n    }\n  }\n\n  onStateServiceIsReadyChange(isReady: boolean) {\n    if (isReady) {\n      if (this._stateService.notifications && this._stateService.notifications.length) {\n        this.notifications = this._stateService.notifications;\n      }\n    }\n  }\n\n  onRefreshChange(state: RefreshStateEnum): void {\n    console.log('onRefreshChange', state);\n    if (state === RefreshStateEnum.refresh) {\n      this.generate();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notify/notify.service.ts","import { Injectable } from '@angular/core';\nimport * as Domain from './refresh';\nimport { timer } from 'rxjs/observable/timer';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Injectable()\nexport class RefreshService implements Domain.RefreshServiceInterface {\n   //#region - Refresh Service Implementation\n   interval: number;\n   ticks: number;\n   timerSubscription: Subscription;\n   stateChange$: Observable<Domain.RefreshStateEnum>;\n   stateChangeObserver: Observer<Domain.RefreshStateEnum>;\n \n   private _state: Domain.RefreshStateEnum;\n \n \n   get state(): Domain.RefreshStateEnum {\n     return this._state;\n   }\n \n   set state(newState: Domain.RefreshStateEnum) {\n    this._state = newState;\n    if (this.stateChangeObserver) {\n      this.stateChangeObserver.next(newState);\n    }\n   }\n \n   start(): void {\n     if (this.state === Domain.RefreshStateEnum.stopped) {\n       this.startTimer();\n     }\n   }\n \n   stop(): void {\n     if (this.state === Domain.RefreshStateEnum.started) {\n       this.stopTimer();\n     }\n   }\n \n   //#endregion\n \n   //#region - constructor\n \n   constructor() {\n     this._state = Domain.RefreshStateEnum.stopped;\n     this.interval = 30 * 1000;\n     this.timerSubscription = Subscription.EMPTY;\n     this.stateChange$ = new Observable<Domain.RefreshStateEnum>(\n       (observer: any) => this.stateChangeObserver = observer\n     ).share();\n   }\n \n   //#endregion\n \n   //#region internal methods\n \n   private startTimer(): void {\n     const ticker: any = timer(this.interval, this.interval);\n     this.state = Domain.RefreshStateEnum.started;\n     this.timerSubscription = ticker.subscribe(\n             (tick: number) => {\n                 this.ticks = tick;\n                 this.state = Domain.RefreshStateEnum.refresh; });\n   }\n \n   private stopTimer(): void {\n     this.timerSubscription.unsubscribe();\n     this.state = Domain.RefreshStateEnum.stopped;\n     this.ticks = 0;\n   }\n \n   //#endregion\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notify/refresh/refresh.service.ts","import { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\n\n/**\n * Enumeration defining the 3 possible states\n * of the refresh service class.\n */\nexport class RefreshStateEnum {\n    /**\n     * Refresh process timer has started.\n     */\n    static started = 'started';\n    /**\n     * Refresh process timer has stopped.\n     */\n    static stopped = 'stopped';\n    /**\n     * Timer has triggered the target callback method.\n     */\n    static refresh = 'refresh';\n}\n\n/**\n * Refresh Service Interface. This interface is used\n * to define a simple Reactive based timer process.\n * Based on a configured interval, when started the interface\n * will notify subscribed observer.\n */\nexport interface RefreshServiceInterface {\n    /**\n     * Refresh Count. On start value is\n     * set to 1. On stop value is set to 0.\n     */\n    ticks: number;\n    /**\n     * Refresh interval in milliseconds.\n     * Note - The first refresh will fire immediately.\n     * Subsequent refreshes will ellapse after this period.\n     */\n    interval: number;\n    /**\n     * Observable used to detect a refresh service\n     * state change. On start, the state\n     * of the service is set to \"started\". On\n     * stop the state of the service is set to\n     * \"stopped\".\n     */\n    stateChange$: Observable<RefreshStateEnum>;\n    /**\n     * Observer which is notified on the state \n     * property change.\n     */\n    stateChangeObserver: Observer<RefreshStateEnum>;\n    /**\n     * State property used to describe the state\n     * of the service.\n     */\n    state: RefreshStateEnum;\n    /**\n     * Subscription used to control (start or stop) the\n     * timer instance.\n     */\n    timerSubscription: Subscription;\n    /**\n     * Method used to subscribe to a new timer, set\n     * state property to \"started\".\n     */\n    start(): void;\n    /**\n     * Method used to unsubscribe to the timer, set\n     * the state property to \"stopped\", and reset\n     * the tick count to 0.\n     */\n    stop(): void;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notify/refresh/refresh.ts","import {\n  Injectable\n} from '@angular/core';\nimport {\n  StateServiceInterface\n} from '../state';\nimport {\n  LocalStorageOptionsInterface, LocalStorageServiceInterface\n} from './local-storage';\n\nimport { List } from 'immutable';\n\n\n@Injectable()\nexport class LocalStorageService implements LocalStorageServiceInterface {\n\n  params: Map<string, any>;\n  options: LocalStorageOptionsInterface;\n  isLocalStorageSupported: boolean;\n\n  constructor() {\n    this.params = new Map();\n    this.options = <LocalStorageOptionsInterface> {\n        appKey: 'fiddle',\n        blackList: []\n    };\n    if (window.localStorage) {\n      this.isLocalStorageSupported = true;\n    } else {\n      console.warn('Local Storage is not supported');\n    }\n  }\n\n  read() {\n    if (this.isLocalStorageSupported) {\n      Object.keys(window.localStorage).forEach((key: string) => {\n        const value: any = this.getItem(key);\n        if (value !== null && value !== undefined) {\n          this.params[key] = value;\n        }\n      });\n    }\n  }\n\n  updateStateService(key: string, stateService: StateServiceInterface) {\n    this.params.set(key, this.getItem(key));\n    if (key !== this.options.appKey) {\n      stateService.isReady = false;\n    }\n    const state = this.params.get(key);\n    if (state && state !== undefined && Object.entries(state).length) {\n      Object.keys(state).forEach((property: string) => {\n        const privateProperty: string = '_' + property;\n        if (privateProperty in stateService && property !== 'type') {\n          const isValid: boolean = this.options.blackList.indexOf(property) === -1;\n          if (isValid) {\n            let value: any = state[property];\n            if (stateService.hasOwnProperty(privateProperty)) {\n              if (stateService[privateProperty] && stateService[privateProperty].constructor === List) {\n                if (!value || value.constructor !== Array) {\n                  value = [];\n                }\n                stateService[privateProperty] = List(value);\n              } else {\n                console.log('stateService[privateProperty] = ', value);\n                stateService[privateProperty] = value;\n              }\n            }\n          }\n        }\n      });\n    }\n    if (key !== this.options.appKey) {\n      stateService.isReady = true;\n    }\n  }\n\n  write(key: string, value: any, stateType: string) {\n    if (!this.params.has(stateType)) {\n      this.params[stateType] = {};\n    }\n    this.params.set(stateType, value);\n    this.setItem(stateType, this.params.get(stateType));\n  }\n\n  clear(stateType: string) {\n    this.params.set(stateType, {});\n    this.setItem(stateType, this.params.get(stateType));\n  }\n\n  private getItem(key: string) {\n    let value: any;\n\n    if (this.isLocalStorageSupported) {\n      if (window.localStorage[key]) {\n        try {\n          value = JSON.parse(window.localStorage[key]);\n        } catch (e) {\n          value = {};\n        }\n      }\n    }\n\n    return value;\n  }\n\n  private setItem(key: string, value: any) {\n    if (this.isLocalStorageSupported) {\n      window.localStorage[key] = JSON.stringify(value);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/state/local-storage/local-storage.service.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LocalStorageService } from './local-storage/local-storage.service';\nimport { StateService } from './state.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [LocalStorageService, StateService]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n        ngModule: StateModule,\n        providers: [LocalStorageService, StateService]\n    };\n}\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/state/state.module.ts","import {\n  Injectable\n} from '@angular/core';\nimport {\n  Observable\n} from 'rxjs/Observable';\nimport {\n  Observer\n} from 'rxjs/Observer';\nimport 'rxjs/add/operator/share';\nimport {\n  LocalStorageService\n} from './local-storage/local-storage.service';\nimport {\n  GridState,\n  PersistedTypesEnum,\n  StateServiceInterface\n} from './state';\n\nimport * as NotifyDomain from '../notify/notify';\n\ndeclare let _: any;\nimport {\n  List\n} from 'immutable';\n\n\n@Injectable()\nexport class StateService implements StateServiceInterface {\n\n  isPreloaderChange$: Observable<boolean>;\n  isReadyChange$: Observable<boolean>;\n  gridStateChange$: Observable<GridState>;\n  notificationsGridStateChange$: Observable<GridState>;\n  notificationsChange$: Observable<NotifyDomain.Notification[]>;\n  typeChange$: Observable<string>;\n\n  [key: string]: any;\n\n  private _gridState: GridState;\n  private _gridStateObserver: Observer<GridState>;\n  private _notificationsGridState: GridState;\n  private _notificationsGridStateObserver: Observer<GridState>;\n  private _isPreloader: boolean;\n  private _isPreloaderObserver: Observer<boolean>;\n  private _isReady: boolean;\n  private _isReadyObserver: Observer<boolean>;\n  private _notifications: NotifyDomain.Notification[];\n  private _notificationsObserver: Observer<NotifyDomain.Notification[]>;\n\n  private _type: string;\n  private _typeObserver: Observer<string>;\n\n  set isPreloader(newValue: boolean) {\n    if (this._isPreloader !== newValue) {\n      this._isPreloader = newValue;\n      if (this._isPreloaderObserver) {\n        this._isPreloaderObserver.next(newValue);\n      }\n    }\n  }\n\n  get isPreloader(): boolean {\n    return this._isPreloader;\n  }\n\n  set isReady(newValue: boolean) {\n    if (this._isReady !== newValue) {\n      this._isReady = newValue;\n      if (this._isReadyObserver) {\n        this._isReadyObserver.next(newValue);\n      }\n    }\n  }\n\n  get isReady(): boolean {\n    return this._isReady;\n  }\n\n  get gridState(): GridState {\n    return this._gridState;\n  }\n\n  set gridState(newValue: GridState) {\n    if (!_.isEqual(newValue, this._gridState)) {\n      this._gridState = newValue;\n      if (this.isReady) {\n        this.updateState(PersistedTypesEnum.gridState, {gridState: newValue});\n      }\n      if (this._gridStateObserver) {\n        this._gridStateObserver.next(newValue);\n      }\n    }\n  }\n\n  get notificationsGridState(): GridState {\n    return this._notificationsGridState;\n  }\n\n  set notificationsGridState(newValue: GridState) {\n    if (!_.isEqual(newValue, this._notificationsGridState)) {\n      this._notificationsGridState = newValue;\n      if (this.isReady) {\n        this.updateState(PersistedTypesEnum.notificationsGridState, {notificationGridState: newValue});\n      }\n      if (this._notificationsGridStateObserver) {\n        this._notificationsGridStateObserver.next(newValue);\n      }\n    }\n  }\n\n  get notifications(): NotifyDomain.Notification[] {\n    return this._notifications;\n  }\n\n  set notifications(newValue: NotifyDomain.Notification[]) {\n    if (!_.isEqual(newValue, this._notifications)) {\n      this._notifications = newValue;\n      if (this.isReady) {\n        this.updateState(PersistedTypesEnum.notifications, {notifications: newValue});\n      }\n      if (this._notificationsObserver) {\n        this._notificationsObserver.next(newValue);\n      }\n    }\n  }\n\n  set type(newValue: string) {\n    if (this._type !== newValue) {\n      this._type = newValue;\n      if (this._typeObserver) {\n        this._typeObserver.next(newValue);\n      }\n    }\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  constructor(protected localStorageService: LocalStorageService) {\n    this._isReady = false;\n    this._type = PersistedTypesEnum.localStorageKey;\n    this._isPreloader = true;\n    this._gridState = {};\n    this._notificationsGridState = {};\n    this._notifications = [];\n    this.gridStateChange$ = new Observable<GridState>(\n      (observer: any) => this._gridStateObserver = observer\n    ).share();\n\n    this.notificationsGridStateChange$ = new Observable<GridState>(\n      (observer: any) => this._notificationsGridObserver = observer\n    ).share();\n\n    this.isReadyChange$ = new Observable < boolean > (\n      (observer: any) => this._isReadyObserver = observer\n    ).share();\n\n    this.notificationsChange$ = new Observable<NotifyDomain.Notification[]>(\n      (observer: any) => this._notificationsObserver = observer\n    ).share();\n\n    this.typeChange$ = new Observable<string>(\n      (observer: any) => this._typeObserver = observer\n    ).share();\n\n  }\n\n  private updateState(key: string, value: any, type: string = null) {\n    if (this.type) {\n      this.localStorageService.write(key, value, this.type);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/state/state.service.ts","import { Observable } from 'rxjs/Observable';\nimport * as NotifyDomain from '../notify/notify';\n\nexport class PersistedTypesEnum {\n    static localStorageKey = 'fiddle-0037';\n    static gridState = 'gridState';\n    static notificationsGridState = 'notificationsGridState';\n    static notifications = 'notifications';\n}\n\nexport interface GridState {\n    columnState?: any;\n    columnGroupsState?: any;\n    sortModel?: any;\n    filterModel?: any;\n    detailColumnState?: any;\n    detailSortModel?: any;\n    detailFilterModel?: any;\n}\n\n\nexport interface State {\n    gridState: GridState;\n    notificationsGridState: GridState;\n}\n\n\n\nexport interface StateServiceInterface {\n  isReadyChange$: Observable<boolean>;\n  isPreloaderChange$: Observable<boolean>;\n  gridStateChange$: Observable<GridState>;\n  notificationsGridStateChange$: Observable<GridState>;\n  notificationsChange$: Observable<NotifyDomain.Notification[]>;\n  [key: string]: any;\n  type: string;\n  isReady: boolean;\n  isPreloader: boolean;\n  gridState: GridState;\n  notificationsGridState: GridState;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/state/state.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { LicenseManager } from '@ag-grid-enterprise/all-modules';\n\n\nfetch('assets/license.json').then((response: any) => {\n  return response.json();\n}).then((data: any) => {\n  LicenseManager.setLicenseKey(data.license);\n  if (environment.production) {\n    enableProdMode();\n  }\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}