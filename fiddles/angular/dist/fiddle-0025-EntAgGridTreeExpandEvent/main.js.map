{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/ag-tree-grid/ag-tree-grid.component.css","webpack:///./src/app/ag-tree-grid/ag-tree-grid.component.html","webpack:///./src/app/ag-tree-grid/ag-tree-grid.component.ts","webpack:///./src/app/ag-tree-grid/ag-tree-grid.module.ts","webpack:///./src/app/ag-tree-grid/enums/ag-tree-grid-cmds.ts","webpack:///./src/app/ag-tree-grid/enums/ag-tree-grid-events.ts","webpack:///./src/app/ag-tree-grid/enums/index.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".ag-tree-grid {\\n\\n}\\n\\n.ag-tree-grid-filter {\\n  width: 100%;\\n  background-color: #000;\\n  color: white;\\n  border: none;\\n  outline: none;\\n  --webkit-input-placeholder: white;\\n}\\n\\ninput[type=\\\"text\\\"], textarea {\\n  padding: 7px 10px;\\n  font-size: 14px;\\n  background: #000;\\n  color: lime;\\n}\\n\\n.ag-header,\\n.ag-header-viewport {\\n  display: none !important;\\n}\\n\\n.mdi {\\n  font-size: 1.1rem;\\n  vertical-align: middle;\\n}\\n\\n.pull-left {\\n  margin-left: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWctdHJlZS1ncmlkL2FnLXRyZWUtZ3JpZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0VBQ0UsV0FBVztFQUNYLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osWUFBWTtFQUNaLGFBQWE7RUFDYixpQ0FBaUM7QUFDbkM7O0FBR0E7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7O0FBRUE7O0VBRUUsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FnLXRyZWUtZ3JpZC9hZy10cmVlLWdyaWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZy10cmVlLWdyaWQge1xuXG59XG5cbi5hZy10cmVlLWdyaWQtZmlsdGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICAtLXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcjogd2hpdGU7XG59XG5cblxuaW5wdXRbdHlwZT1cInRleHRcIl0sIHRleHRhcmVhIHtcbiAgcGFkZGluZzogN3B4IDEwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgY29sb3I6IGxpbWU7XG59XG5cbi5hZy1oZWFkZXIsXG4uYWctaGVhZGVyLXZpZXdwb3J0IHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4ubWRpIHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5wdWxsLWxlZnQge1xuICBtYXJnaW4tbGVmdDogMHB4O1xufSJdfQ== */\"","module.exports = \"\\n<input class=\\\"ag-tree-grid-filter\\\" (keyup)=\\\"onQuickFilterChanged($event)\\\" type=\\\"text\\\" id=\\\"quickFilterInput\\\" placeholder=\\\"Type text to filter...\\\"/>\\n<div class=\\\"ag-tree-grid\\\" [ngStyle]=\\\"_style\\\" (window:resize)=\\\"onResize($event)\\\">\\n<ag-grid-angular\\n    #agGrid\\n    style=\\\"width: 100%; height: 100%;\\\"\\n    id=\\\"myGrid\\\"\\n    class=\\\"ag-theme-balham\\\"\\n    [columnDefs]=\\\"this._columnDefs\\\"\\n    [rowData]=\\\"this._rowData\\\"\\n    [rowSelection]=\\\"this._rowSelection\\\"\\n    [groupSelectsChildren]=\\\"true\\\"\\n    [suppressRowClickSelection]=\\\"false\\\"\\n    [toolPanelSuppressSideButtons]=\\\"true\\\"\\n    [animateRows]=\\\"true\\\"\\n    [defaultColDef]=\\\"this._defaultColDef\\\"\\n    [autoGroupColumnDef]=\\\"this._autoGroupColumnDef\\\"\\n    (gridReady)=\\\"onGridReady($event)\\\"\\n    (selectionChanged)=\\\"onSelectionChanged($event)\\\"\\n    (rowClicked)=\\\"onRowClicked($event)\\\"\\n    (rowGroupOpened)=\\\"onRowGroupOpened($event)\\\"\\n  ></ag-grid-angular>\\n</div>\\n\\n\\n\"","import {\n  Input,\n  Output,\n  EventEmitter,\n  Component,\n  OnChanges,\n  ViewChild,\n  ViewEncapsulation,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  ChangeDetectorRef,\n  DoCheck\n} from '@angular/core';\n\nimport {  ICellRendererComp, ICellRendererParams } from 'ag-grid/main'; \n\nimport {\n  AgTreeGridOptions,\n  AgTreeGridEvent\n} from './interfaces/index';\n\nimport {\n  AgTreeGridCmds,\n  AgTreeGridEvents\n} from './enums/index';\n\nimport { Events } from '../interfaces/events';\nimport { truncate } from 'fs';\n\n\n@Component({\n  selector: 'app-ag-tree-grid',\n  moduleId: module.id,\n  templateUrl: 'ag-tree-grid.component.html',\n  styleUrls: ['ag-tree-grid.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AgTreeGridComponent implements OnChanges, DoCheck {\n\n  @ViewChild('agGrid') agGrid: HTMLElement;\n  @Output() events: EventEmitter<AgTreeGridEvent>;\n  @Input() options: AgTreeGridOptions;\n  \n  // #region Internal Properties\n  private _firstCellParams: ICellRendererParams;\n  private _differ: KeyValueDiffer<any, any>;\n  private _isUpdate: boolean;\n  private _gridApi: any;\n  private _columnApi: any;\n  private _columnDefs: any;\n  private _rowSelection: any;\n  private _autoGroupColumnDef: any;\n  private _defaultColDef: any;\n  private _rowData: any;\n  private _style: { width: string; height: string };\n\n  //#endregion\n\n  // #region Constructor\n\n  constructor(private _differs: KeyValueDiffers) {\n\n    this.events = new EventEmitter();\n    this._rowSelection = 'multiple';\n    this._defaultColDef = {\n      sortable: true,\n      resizable: true,\n      suppressMenu: true,\n      filter: 'agTextColumnFilter'\n    };\n    this._autoGroupColumnDef = {\n      cellRenderer: 'agGroupCellRenderer',\n      cellRendererParams: { checkbox: true,\n        suppressCount: true\n       }\n    };\n\n  }\n\n  // #endregion\n\n  // #region OnChanges Implementation\n\n  ngOnChanges(changes: any): void {\n    console.debug(this.constructor.name + '.ngOnChanges');\n\n    if ('options' in changes) {\n      const value = changes['options'].currentValue;\n      if (!this._differ && value) {\n        this._differ = this._differs.find(value).create();\n      }\n    }\n  }\n\n  // #endregion\n\n  // #region DoCheck Implementation\n\n  ngDoCheck(): void {\n    if (this._differ) {\n      const changes: any = this._differ.diff(this.options);\n      if (changes) {\n        changes.forEachChangedItem((item: any) => {\n          this._applyChange(item);\n        });\n        changes.forEachAddedItem((item: any) => {\n          this._applyChange(item);\n        });\n      }\n    }\n  }\n\n  // #endregion\n\n  // #region Event Handlers\n\n  onResize(event: any): void {\n    console.debug(this.constructor.name + '.onResize');\n    window.setTimeout(() => {\n      this._stretchGrid(event.target.innerWidth, event.target.innerHeight);\n      this._gridApi.sizeColumnsToFit(); \n    }, 200);\n  }\n\n  onGridReady(params: any) {\n    console.debug(this.constructor.name + '.onGridReady');\n    this._gridApi = params.api;\n    this._columnApi = params.columnApi;\n    this._stretchGrid(window.innerWidth, window.innerHeight);\n    this._gridApi.sizeColumnsToFit();  \n    window.addEventListener('resize', (event:any) => this.onResize(event)); \n  }\n\n  onSelectionChanged(event: any) {\n    console.debug(this.constructor.name + '.onSelectionChanged');\n    console.debug(event);\n    this.events.emit({\n      type: AgTreeGridEvents.selectBubble,\n      data: event,\n      gridState: this._columnApi.getColumnState()\n    });\n  }\n\n  onQuickFilterChanged(event: any) {\n    console.debug(this.constructor.name + '.onQuickFilterChanged');\n    this._gridApi.setQuickFilter(event.target.value);\n  }\n\n  onRowClicked(params: any) {\n    console.debug(this.constructor.name + '.onRowClicked');\n    const _isExpanded: boolean = params.node.expanded;\n    console.debug(this.constructor.name + ' params.node.expanded = ' + _isExpanded);\n    const _actionType = params.event.target.getAttribute('grid-action');\n    console.debug('params');\n    console.debug(params); \n    console.debug('actionType = ' + _actionType);\n    if (_actionType) {\n      switch(_actionType) {\n        case 'none':\n          return false;\n        case 'request':\n          params.event.target.setAttribute('style', 'display: none !important');\n          this.events.emit({\n            type: AgTreeGridEvents.nodeRequest,\n            data: params\n          });\n          return false;\n        default:\n          params.node.setExpanded(!_isExpanded);\n          if (!_isExpanded) {\n            this.events.emit({\n              type: AgTreeGridEvents.expandBubble,\n              data: params\n            });\n          }\n      }\n    }\n  }\n\n  onRowGroupOpened(params: any) {\n    console.debug(this.constructor.name + '.onRowGroupOpened');\n    const _isExpanded: boolean = params.node.expanded;\n    console.debug(this.constructor.name + ' params.node.expanded = ' + _isExpanded);\n    console.debug(params);\n    const _node: any = params.node;\n    const _level: number = _node.level;\n    const _children: any[] = _level === 1 ? _node.allLeafChildren : [];\n    const _pseudoChild: any = _children.length === 1 ? _children[0] : null;\n    const _firstChild: any = _node.allLeafChildren.length > 0 ? _node.allLeafChildren[0] : null;\n    const _model: any = _pseudoChild && _pseudoChild.data ? _pseudoChild.data : null;\n    console.debug('this._isLoading(_model, loading...) = ' + this._isLoading(_model, 'loading...'));\n    if (this._isLoading(_model, 'loading...')) {\n      params.node.setExpanded(false);\n      return false;\n    } else if ( _level === 1 && _firstChild && _firstChild.data && this._isLoading(_firstChild.data, 'loading...')) {\n      this._gridApi.updateRowData({ remove: [_firstChild.data] });\n    }      \n  }\n\n  // #endregion\n\n  // #region internal methods\n\n  private _isLoading(obj: any, query: string): boolean {\n    if (obj && query) {\n      for (const key in obj) {\n        const value = obj[key];\n        if (typeof value !== 'object' && String(value).toLowerCase().trim() === query.toLowerCase().trim()) {\n          console.debug(obj);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private _stretchGrid(width: number, height: number): void {\n    console.debug(this.constructor.name + '._stretchGrid');\n\n    this._style = {\n      width: width + 'px',\n      height: (height - 40) + 'px'\n    };\n  }\n\n  private _applyChange(item: any): void {\n    console.debug(this.constructor.name + '._applyChange');\n    switch (item.key) {\n      case 'columnDefs':\n        this._columnDefs = this.options.columnDefs;\n        break;\n      case 'rowData':\n        this._rowData = this.options.rowData;\n        break;\n      case 'autoGroupColumnDef':\n        this._autoGroupColumnDef = this.options.autoGroupColumnDef;\n        break;\n        case 'nodesRequest':\n        item.currentValue.then((data: any) => {\n          this._gridApi.updateRowData({ add: data });\n        });\n        break;\n    }\n  }\n\n  // #endregion\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AgTreeGridComponent } from './ag-tree-grid.component';\nimport {AgGridModule} from 'ag-grid-angular/main';\n\nimport 'ag-grid-enterprise';\n\n@NgModule({\n  declarations: [AgTreeGridComponent],\n  imports: [\n    CommonModule,\n    AgGridModule.withComponents([])\n  ],\n  exports: [\n    AgTreeGridComponent\n  ]\n})\nexport class AgTreeGridModule { }\n","export enum AgTreeGridCmds {\n  ShowAll = 1,\n  ShowSelected = 2,\n  ClearSelected = 3,\n  Reload = 4,\n  ExpandAll = 5,\n  CollapseAll = 6,\n  SelectAll = 7,\n  Export = 8,\n  showLoader = 9,\n  hideLoader = 10,\n  invalidate =11\n}\n","\nexport enum AgTreeGridEvents {\n  cmd = 1,\n  nodeChange = 2,\n  filter = 3,\n  selectBubble = 4,\n  nodeRequest = 5,\n  expandBubble= 6\n}\n","export * from './ag-tree-grid-events';\nexport * from './ag-tree-grid-cmds';\n","module.exports = \".fiddle {\\n  zoom: 150%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWRkbGUge1xuICB6b29tOiAxNTAlO1xufVxuIl19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-primary navbar-top\\\">\\n  <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\"></ul>\\n    <ul class=\\\"navbar-nav my-2 my-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link fiddle\\\" style=\\\"font-weight: 700; color: whitesmoke;\\\" alt=\\\"Fork me on GitHub\\\" target=\\\"_blank\\\"\\n           href=\\\"https://github.com/bradyhouse/house/tree/master/fiddles/angular2-cli/fiddle-0025-EntAgGridTreeExpandEvent\\\">\\n          Fork Me On Github\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<app-ag-tree-grid [options]=\\\"options\\\" (events)=\\\"AgTreeGridOnEvent($event)\\\"></app-ag-tree-grid>\\n\\n\"","import { AfterViewInit, Component } from '@angular/core';\nimport { AgTreeGridImpl, AgTreeGridOptions, AgTreeGridEvent} from './ag-tree-grid/interfaces/index';\nimport { AgTreeGridEvents } from './ag-tree-grid/enums/index';\nimport { HttpClient } from '@angular/common/http';\nimport {  ICellRendererComp, ICellRendererParams } from 'ag-grid/main'; \n\ntype Branch = {\n  country: string;\n  sport: string;\n  athlete: string;\n};\n\n\n@Component({\n  selector: 'my-app',\n  moduleId: module.id,\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css']\n})\nexport class AppComponent implements AfterViewInit, AgTreeGridImpl {\n\n  // #region properties \n\n  options: AgTreeGridOptions;\n\n  autoGroupColumnDef: any = {\n    headerName: '',\n    field: 'athlete',\n    cellRenderer: 'agGroupCellRenderer',\n    cellRendererParams: { checkbox: true,\n      suppressCount: false,\n      innerRenderer: (params: ICellRendererParams) => this._onCellRender(params)\n    }\n  };\n\n  columnDef: any[] = [\n    {\n      headerName: 'Gold',\n      field: 'gold',\n      width: 100,\n      aggFunc: 'sum',\n      hide: true\n    },\n    {\n      headerName: 'Silver',\n      field: 'silver',\n      width: 100,\n      aggFunc: 'sum',\n      hide: true\n    },\n    {\n      headerName: 'Bronze',\n      field: 'bronze',\n      width: 100,\n      aggFunc: 'sum',\n      hide: true\n    },\n    {\n      headerName: 'Total',\n      field: 'total',\n      width: 100,\n      aggFunc: 'sum',\n      hide: true\n    },\n    {\n      headerName: 'Age',\n      field: 'age',\n      width: 90,\n      checkboxSelection: true,\n      aggFunc: 'sum',\n      hide: true\n    },\n    {\n      headerName: 'Country',\n      field: 'country',\n      width: 120,\n      rowGroupIndex: 0,\n      hide: true\n    },\n    {\n      headerName: 'Year',\n      field: 'year',\n      width: 90,\n      hide: true\n    },\n    {\n      headerName: 'Date',\n      field: 'date',\n      width: 110,\n      hide: true\n    },\n    {\n      headerName: 'Sport',\n      field: 'sport',\n      width: 110,\n      rowGroupIndex: 1,\n      hide: true\n    }\n  ];\n\n  // #endregion\n  // #region internal properties\n\n  private _firstCellParams: ICellRendererParams;\n\n  // #endregion\n  // #region constructor \n  constructor(private _http: HttpClient) {\n    this.options = {\n      autoGroupColumnDef: this.autoGroupColumnDef,\n      columnDefs: this.columnDef\n    }\n  }\n  // #endregion\n  // #region AfterViewInit implementation\n  \n  ngAfterViewInit(): void {\n    console.debug(this.constructor.name + '.ngAfterViewInit');\n    this._http\n      .get(\n        'assets/data.json'\n      )\n      .subscribe((data: any) => {\n        this.options.rowData = this._trunkFactory(data);\n        console.clear();\n      });\n  }\n\n  // #endregion\n  // #region AgTreeGridImpl implementation\n  \n  AgTreeGridOnEvent(event: AgTreeGridEvent): void {\n    console.debug(this.constructor.name + '.onEvents');\n    switch(event.type) {\n      case AgTreeGridEvents.selectBubble:\n        console.debug('select bubble'); \n        console.debug(event.data.api.getSelectedRows());\n        console.debug('grid state:');\n        console.debug(event.gridState);\n        break;\n      case AgTreeGridEvents.nodeRequest:\n        console.debug('node request');\n        this.options.nodesRequest = this._requestPromiseFactory(event.data);\n        break;\n    }\n  }\n\n  // #endregion\n  // #region internal methods\n\n  private _trunkFactory(data: any[]): Branch[] {\n    console.debug(this.constructor.name + '._trunkFactory');\n    let _branchMap: any = {};\n    data.forEach((row: any) => {\n       const _id: string = row.country + '-' + row.sport;\n       const _branch: Branch = { country: row.country, sport: row.sport, athlete: 'loading...' };\n       if(!_branchMap[_id]) {\n         _branchMap[_id] = _branch;\n       }      \n    });\n    const _branchKeys = Object.keys(_branchMap);\n    const _trunk = _branchKeys.map((_branchKey: any) => { return _branchMap[_branchKey]; });\n    console.debug('data: ');\n    console.debug(_trunk);\n    return _trunk;\n  }\n\n  private _leafFactory(data: any[], country: string, sport: string) {\n    console.debug(this.constructor.name + '._trunkFactory');\n    let _branchMap: any = {};\n    \n    data.forEach((node: any) => {\n      if(node.country.toLowerCase().trim() === country.toLowerCase().trim() && \n         node.sport.toLowerCase().trim() === sport.toLowerCase().trim()) {\n          const _id: string = node.country + '-' + node.sport + '-' + node.athlete;\n          const _branch: Branch = { country: node.country, sport: node.sport, athlete: node.athlete };\n          if(!_branchMap[_id]) {\n            _branchMap[_id] = _branch;\n          }   \n      }\n    });\n    const _branchKeys = Object.keys(_branchMap);\n    const _leaves = _branchKeys.map((_branchKey: any) => { return _branchMap[_branchKey]; });\n    return _leaves;\n  }\n\n  _requestPromiseFactory(data: any): Promise<any> {\n    console.debug(this.constructor.name + '._requestPromiseFactory');\n    if (data && data.node) {\n      const _node: any = data.node;\n      const _sport: string = _node.key;\n      const _country: string = _node.parent.key;\n      const _firstChild: any = _node.allLeafChildren.length > 0 ? _node.allLeafChildren[0] : null;\n      console.debug('sport = ' + _sport);\n      console.debug('country = ' + _country);\n      return this._http.get('assets/data.json')\n      .toPromise()\n      .then((res: any) => {\n        console.debug('fetch > then > res:');\n        window.setTimeout(() => {\n          _node.setExpanded(true);\n        }, 500);\n        return this._leafFactory(res, _country, _sport);\n      })\n      .catch(this._onFetchError);\n    }\n    return Promise.reject('Invalid Parameters');\n  }\n\n  private _onFetchError(error:any) {\n    if (error) {\n      console.error(error);\n    }\n  }\n\n  private _onCellRender(params: ICellRendererParams) {\n    if (!this._firstCellParams) {\n      this._firstCellParams = params;\n      console.debug(this.constructor.name + '.onCellRender');\n      console.debug(params);\n    }\n    switch(params.node.field) {\n      case 'sport':\n        if (params.node.allLeafChildren.length === 1) {\n          return '<span grid-action=\"none\">' + params.value + '</span>' + '<mat-icon class=\"mdi mdi-plus-box float-right\" grid-action=\"request\" aria-hidden=\"true\"></mat-icon>';\n        } else {\n          return params.value;\n        }\n      default: \n        return params.value;\n    }\n  }\n\n\n  // #endregion\n\n}\n\n","\nimport { NgModule } from '@angular/core';\n\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\n// HttpClient\nimport { HttpClientModule } from '@angular/common/http';\nimport { AgTreeGridModule } from './ag-tree-grid/ag-tree-grid.module';\n\n\n// ag-grid\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule, // <-- import the FormsModule before binding with [(ngModel)]\n    HttpClientModule,\n    AgTreeGridModule,\n    MatIconModule\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer){\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('./assets/mdi.svg'));\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { LicenseManager } from 'ag-grid-enterprise';\n\n\nfetch('assets/license.json').then((response: any) => {\n  return response.json();\n}).then((data: any) => {\n  LicenseManager.setLicenseKey(data.license);\n  if (environment.production) {\n    enableProdMode();\n  }\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n});\n\n"],"sourceRoot":""}